
AVRASM ver. 2.1.30  C:\Users\MehdiQnb\Desktop\Avr prj\code\Local\Debug\List\local.asm Sat Jan 21 13:51:56 2023

C:\Users\MehdiQnb\Desktop\Avr prj\code\Local\Debug\List\local.asm(1088): warning: Register r4 already defined by the .DEF directive
C:\Users\MehdiQnb\Desktop\Avr prj\code\Local\Debug\List\local.asm(1089): warning: Register r5 already defined by the .DEF directive
C:\Users\MehdiQnb\Desktop\Avr prj\code\Local\Debug\List\local.asm(1090): warning: Register r6 already defined by the .DEF directive
C:\Users\MehdiQnb\Desktop\Avr prj\code\Local\Debug\List\local.asm(1091): warning: Register r7 already defined by the .DEF directive
C:\Users\MehdiQnb\Desktop\Avr prj\code\Local\Debug\List\local.asm(1092): warning: Register r8 already defined by the .DEF directive
C:\Users\MehdiQnb\Desktop\Avr prj\code\Local\Debug\List\local.asm(1093): warning: Register r9 already defined by the .DEF directive
C:\Users\MehdiQnb\Desktop\Avr prj\code\Local\Debug\List\local.asm(1094): warning: Register r10 already defined by the .DEF directive
C:\Users\MehdiQnb\Desktop\Avr prj\code\Local\Debug\List\local.asm(1095): warning: Register r11 already defined by the .DEF directive
C:\Users\MehdiQnb\Desktop\Avr prj\code\Local\Debug\List\local.asm(1096): warning: Register r12 already defined by the .DEF directive
C:\Users\MehdiQnb\Desktop\Avr prj\code\Local\Debug\List\local.asm(1097): warning: Register r13 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V3.12 Advanced
                 ;(C) Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Build configuration    : Debug
                 ;Chip type              : ATmega32
                 ;Program type           : Application
                 ;Clock frequency        : 8.000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : int, width
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 512 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: No
                 ;Enhanced function parameter passing: Yes
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega32
                 	#pragma AVRPART MEMORY PROG_FLASH 32768
                 	#pragma AVRPART MEMORY EEPROM 1024
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 2048
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x60
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU GICR=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0060
                 	.EQU __SRAM_END=0x085F
                 	.EQU __DSTACK_SIZE=0x0200
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF _Rx_Display=R4
                 	.DEF _Rx_Display_msb=R5
                 	.DEF _Display1=R6
                 	.DEF _Display1_msb=R7
                 	.DEF _Display2=R8
                 	.DEF _Display2_msb=R9
                 	.DEF _Display3=R10
                 	.DEF _Display3_msb=R11
                 	.DEF _Display4=R12
                 	.DEF _Display4_msb=R13
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 017e 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 02f8 	JMP  _usart_rx_isr
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
                 
                 _Activator:
00002a 0201
00002b 0403
00002c 0605
00002d 0807      	.DB  0x1,0x2,0x3,0x4,0x5,0x6,0x7,0x8
00002e 0a09
00002f 0c0b
000030 0e0d
000031 000f      	.DB  0x9,0xA,0xB,0xC,0xD,0xE,0xF,0x0
                 _tbl10_G100:
000032 2710
000033 03e8
000034 0064
000035 000a      	.DB  0x10,0x27,0xE8,0x3,0x64,0x0,0xA,0x0
000036 0001      	.DB  0x1,0x0
                 _tbl16_G100:
000037 1000
000038 0100
000039 0010
00003a 0001      	.DB  0x0,0x10,0x0,0x1,0x10,0x0,0x1,0x0
                 
                 _0x3:
00003b 6c38
00003c 396d
00003d 666e
C:\Users\MehdiQnb\Desktop\Avr prj\code\Local\Debug\List\local.asm(1138): warning: .cseg .db misalignment - padding zero byte
00003e 003b      	.DB  0x38,0x6C,0x6D,0x39,0x6E,0x66,0x3B
                 _0x4:
00003f 3c10
000040 3050
000041 1418
000042 1078      	.DB  0x10,0x3C,0x50,0x30,0x18,0x14,0x78,0x10
                 _0x5:
000043 4438
000044 aa9a
000045 9caa
000046 3840      	.DB  0x38,0x44,0x9A,0xAA,0xAA,0x9C,0x40,0x38
                 _0x6:
000047 0000
000048 2a08
000049 2a1c
C:\Users\MehdiQnb\Desktop\Avr prj\code\Local\Debug\List\local.asm(1144): warning: .cseg .db misalignment - padding zero byte
00004a 0008      	.DB  0x0,0x0,0x8,0x2A,0x1C,0x2A,0x8
                 _0x7:
00004b 6400
00004c a8a8
00004d 1656
C:\Users\MehdiQnb\Desktop\Avr prj\code\Local\Debug\List\local.asm(1146): warning: .cseg .db misalignment - padding zero byte
00004e 0026      	.DB  0x0,0x64,0xA8,0xA8,0x56,0x16,0x26
                 _0x8:
00004f 1408
000050 4122      	.DB  0x8,0x14,0x22,0x41
                 _0x9:
000051 0000
000052 0000
000053 1800
C:\Users\MehdiQnb\Desktop\Avr prj\code\Local\Debug\List\local.asm(1150): warning: .cseg .db misalignment - padding zero byte
000054 0018      	.DB  0x0,0x0,0x0,0x0,0x0,0x18,0x18
                 _0xA:
000055 0000
000056 0800
000057 0808
C:\Users\MehdiQnb\Desktop\Avr prj\code\Local\Debug\List\local.asm(1152): warning: .cseg .db misalignment - padding zero byte
000058 0010      	.DB  0x0,0x0,0x0,0x8,0x8,0x8,0x10
                 _0xB:
000059 0a0a
00005a 143f
00005b 7e14
00005c 2828      	.DB  0xA,0xA,0x3F,0x14,0x14,0x7E,0x28,0x28
                 _0xC:
00005d 5020
00005e 5050
00005f 8870
C:\Users\MehdiQnb\Desktop\Avr prj\code\Local\Debug\List\local.asm(1156): warning: .cseg .db misalignment - padding zero byte
000060 0088      	.DB  0x20,0x50,0x50,0x50,0x70,0x88,0x88
                 _0xD:
000061 4478
000062 7844
000063 4444
C:\Users\MehdiQnb\Desktop\Avr prj\code\Local\Debug\List\local.asm(1158): warning: .cseg .db misalignment - padding zero byte
000064 0078      	.DB  0x78,0x44,0x44,0x78,0x44,0x44,0x78
                 _0xE:
000065 4438
000066 4040
000067 4440
C:\Users\MehdiQnb\Desktop\Avr prj\code\Local\Debug\List\local.asm(1160): warning: .cseg .db misalignment - padding zero byte
000068 0038      	.DB  0x38,0x44,0x40,0x40,0x40,0x44,0x38
                 _0xF:
000069 4478
00006a 4444
00006b 4444
C:\Users\MehdiQnb\Desktop\Avr prj\code\Local\Debug\List\local.asm(1162): warning: .cseg .db misalignment - padding zero byte
00006c 0078      	.DB  0x78,0x44,0x44,0x44,0x44,0x44,0x78
                 _0x10:
00006d 407c
00006e 7840
00006f 4040
C:\Users\MehdiQnb\Desktop\Avr prj\code\Local\Debug\List\local.asm(1164): warning: .cseg .db misalignment - padding zero byte
000070 007c      	.DB  0x7C,0x40,0x40,0x78,0x40,0x40,0x7C
                 _0x11:
000071 407c
000072 7840
000073 4040
C:\Users\MehdiQnb\Desktop\Avr prj\code\Local\Debug\List\local.asm(1166): warning: .cseg .db misalignment - padding zero byte
000074 0040      	.DB  0x7C,0x40,0x40,0x78,0x40,0x40,0x40
                 _0x12:
000075 4438
000076 4c40
000077 4444
C:\Users\MehdiQnb\Desktop\Avr prj\code\Local\Debug\List\local.asm(1168): warning: .cseg .db misalignment - padding zero byte
000078 0038      	.DB  0x38,0x44,0x40,0x4C,0x44,0x44,0x38
                 _0x13:
000079 4444
00007a 7c44
00007b 4444
C:\Users\MehdiQnb\Desktop\Avr prj\code\Local\Debug\List\local.asm(1170): warning: .cseg .db misalignment - padding zero byte
00007c 0044      	.DB  0x44,0x44,0x44,0x7C,0x44,0x44,0x44
                 _0x14:
00007d 3800
00007e 1010
00007f 1010
C:\Users\MehdiQnb\Desktop\Avr prj\code\Local\Debug\List\local.asm(1172): warning: .cseg .db misalignment - padding zero byte
000080 0038      	.DB  0x0,0x38,0x10,0x10,0x10,0x10,0x38
                 _0x15:
000081 1000
000082 1010
000083 1010
000084 6090      	.DB  0x0,0x10,0x10,0x10,0x10,0x10,0x90,0x60
                 _0x16:
000085 4844
000086 6850
000087 4448
C:\Users\MehdiQnb\Desktop\Avr prj\code\Local\Debug\List\local.asm(1176): warning: .cseg .db misalignment - padding zero byte
000088 0044      	.DB  0x44,0x48,0x50,0x68,0x48,0x44,0x44
                 _0x17:
000089 4040
00008a 4040
00008b 4040
C:\Users\MehdiQnb\Desktop\Avr prj\code\Local\Debug\List\local.asm(1178): warning: .cseg .db misalignment - padding zero byte
00008c 007c      	.DB  0x40,0x40,0x40,0x40,0x40,0x40,0x7C
                 _0x18:
00008d c682
00008e aac6
00008f aaaa
C:\Users\MehdiQnb\Desktop\Avr prj\code\Local\Debug\List\local.asm(1180): warning: .cseg .db misalignment - padding zero byte
000090 0092      	.DB  0x82,0xC6,0xC6,0xAA,0xAA,0xAA,0x92
                 _0x19:
000091 6444
000092 5464
000093 4c4c
C:\Users\MehdiQnb\Desktop\Avr prj\code\Local\Debug\List\local.asm(1182): warning: .cseg .db misalignment - padding zero byte
000094 0044      	.DB  0x44,0x64,0x64,0x54,0x4C,0x4C,0x44
                 _0x1A:
000095 4438
000096 4444
000097 4444
C:\Users\MehdiQnb\Desktop\Avr prj\code\Local\Debug\List\local.asm(1184): warning: .cseg .db misalignment - padding zero byte
000098 0038      	.DB  0x38,0x44,0x44,0x44,0x44,0x44,0x38
                 _0x1B:
000099 4870
00009a 7048
00009b 4040
C:\Users\MehdiQnb\Desktop\Avr prj\code\Local\Debug\List\local.asm(1186): warning: .cseg .db misalignment - padding zero byte
00009c 0040      	.DB  0x70,0x48,0x48,0x70,0x40,0x40,0x40
                 _0x1C:
00009d 4438
00009e 4444
00009f 4c54
0000a0 0438      	.DB  0x38,0x44,0x44,0x44,0x54,0x4C,0x38,0x4
                 _0x1D:
0000a1 4478
0000a2 7844
0000a3 4848
C:\Users\MehdiQnb\Desktop\Avr prj\code\Local\Debug\List\local.asm(1190): warning: .cseg .db misalignment - padding zero byte
0000a4 0044      	.DB  0x78,0x44,0x44,0x78,0x48,0x48,0x44
                 _0x1E:
0000a5 4830
0000a6 3040
0000a7 4808
C:\Users\MehdiQnb\Desktop\Avr prj\code\Local\Debug\List\local.asm(1192): warning: .cseg .db misalignment - padding zero byte
0000a8 0030      	.DB  0x30,0x48,0x40,0x30,0x8,0x48,0x30
                 _0x1F:
0000a9 20f8
0000aa 2020
0000ab 2020
C:\Users\MehdiQnb\Desktop\Avr prj\code\Local\Debug\List\local.asm(1194): warning: .cseg .db misalignment - padding zero byte
0000ac 0020      	.DB  0xF8,0x20,0x20,0x20,0x20,0x20,0x20
                 _0x20:
0000ad 4444
0000ae 4444
0000af 4444
C:\Users\MehdiQnb\Desktop\Avr prj\code\Local\Debug\List\local.asm(1196): warning: .cseg .db misalignment - padding zero byte
0000b0 0038      	.DB  0x44,0x44,0x44,0x44,0x44,0x44,0x38
                 _0x21:
0000b1 8282
0000b2 4444
0000b3 2828
C:\Users\MehdiQnb\Desktop\Avr prj\code\Local\Debug\List\local.asm(1198): warning: .cseg .db misalignment - padding zero byte
0000b4 0010      	.DB  0x82,0x82,0x44,0x44,0x28,0x28,0x10
                 _0x22:
0000b5 9200
0000b6 aaaa
0000b7 aaaa
C:\Users\MehdiQnb\Desktop\Avr prj\code\Local\Debug\List\local.asm(1200): warning: .cseg .db misalignment - padding zero byte
0000b8 0044      	.DB  0x0,0x92,0xAA,0xAA,0xAA,0xAA,0x44
                 _0x23:
0000b9 2800
0000ba 1028
0000bb 2810
C:\Users\MehdiQnb\Desktop\Avr prj\code\Local\Debug\List\local.asm(1202): warning: .cseg .db misalignment - padding zero byte
0000bc 0028      	.DB  0x0,0x28,0x28,0x10,0x10,0x28,0x28
                 _0x24:
0000bd 2200
0000be 1414
0000bf 0808
C:\Users\MehdiQnb\Desktop\Avr prj\code\Local\Debug\List\local.asm(1204): warning: .cseg .db misalignment - padding zero byte
0000c0 0008      	.DB  0x0,0x22,0x14,0x14,0x8,0x8,0x8
                 _0x25:
0000c1 3e00
0000c2 0804
0000c3 2010
C:\Users\MehdiQnb\Desktop\Avr prj\code\Local\Debug\List\local.asm(1206): warning: .cseg .db misalignment - padding zero byte
0000c4 003e      	.DB  0x0,0x3E,0x4,0x8,0x10,0x20,0x3E
                 _0x26:
0000c5 221c
0000c6 2222
0000c7 2222
0000c8 1c22      	.DB  0x1C,0x22,0x22,0x22,0x22,0x22,0x22,0x1C
                 _0x27:
0000c9 0800
0000ca 0818
0000cb 0808
C:\Users\MehdiQnb\Desktop\Avr prj\code\Local\Debug\List\local.asm(1210): warning: .cseg .db misalignment - padding zero byte
0000cc 0008      	.DB  0x0,0x8,0x18,0x8,0x8,0x8,0x8
                 _0x28:
0000cd 3800
0000ce 0828
0000cf 3018
C:\Users\MehdiQnb\Desktop\Avr prj\code\Local\Debug\List\local.asm(1212): warning: .cseg .db misalignment - padding zero byte
0000d0 0038      	.DB  0x0,0x38,0x28,0x8,0x18,0x30,0x38
                 _0x29:
0000d1 3c00
0000d2 0c04
0000d3 2404
C:\Users\MehdiQnb\Desktop\Avr prj\code\Local\Debug\List\local.asm(1214): warning: .cseg .db misalignment - padding zero byte
0000d4 0018      	.DB  0x0,0x3C,0x4,0xC,0x4,0x24,0x18
                 _0x2A:
0000d5 0400
0000d6 0c0c
0000d7 1e14
C:\Users\MehdiQnb\Desktop\Avr prj\code\Local\Debug\List\local.asm(1216): warning: .cseg .db misalignment - padding zero byte
0000d8 0004      	.DB  0x0,0x4,0xC,0xC,0x14,0x1E,0x4
                 _0x2B:
0000d9 1c00
0000da 3820
0000db 2404
C:\Users\MehdiQnb\Desktop\Avr prj\code\Local\Debug\List\local.asm(1218): warning: .cseg .db misalignment - padding zero byte
0000dc 0018      	.DB  0x0,0x1C,0x20,0x38,0x4,0x24,0x18
                 _0x2C:
0000dd 1c00
0000de 3820
0000df 2424
C:\Users\MehdiQnb\Desktop\Avr prj\code\Local\Debug\List\local.asm(1220): warning: .cseg .db misalignment - padding zero byte
0000e0 0018      	.DB  0x0,0x1C,0x20,0x38,0x24,0x24,0x18
                 _0x2D:
0000e1 3800
0000e2 0804
0000e3 1010
C:\Users\MehdiQnb\Desktop\Avr prj\code\Local\Debug\List\local.asm(1222): warning: .cseg .db misalignment - padding zero byte
0000e4 0010      	.DB  0x0,0x38,0x4,0x8,0x10,0x10,0x10
                 _0x2E:
0000e5 3c00
0000e6 1824
0000e7 2424
C:\Users\MehdiQnb\Desktop\Avr prj\code\Local\Debug\List\local.asm(1224): warning: .cseg .db misalignment - padding zero byte
0000e8 0018      	.DB  0x0,0x3C,0x24,0x18,0x24,0x24,0x18
                 _0x2F:
0000e9 1800
0000ea 2424
0000eb 041c
C:\Users\MehdiQnb\Desktop\Avr prj\code\Local\Debug\List\local.asm(1226): warning: .cseg .db misalignment - padding zero byte
0000ec 0038      	.DB  0x0,0x18,0x24,0x24,0x1C,0x4,0x38
                 _0x2040060:
C:\Users\MehdiQnb\Desktop\Avr prj\code\Local\Debug\List\local.asm(1228): warning: .cseg .db misalignment - padding zero byte
0000ed 0001      	.DB  0x1
                 _0x2040000:
0000ee 4e2d
0000ef 4e41
0000f0 4900
0000f1 464e      	.DB  0x2D,0x4E,0x41,0x4E,0x0,0x49,0x4E,0x46
C:\Users\MehdiQnb\Desktop\Avr prj\code\Local\Debug\List\local.asm(1231): warning: .cseg .db misalignment - padding zero byte
0000f2 0000      	.DB  0x0
                 
                 __GLOBAL_INI_TBL:
0000f3 0007      	.DW  0x07
0000f4 0268      	.DW  _and
0000f5 0076      	.DW  _0x3*2
                 
0000f6 0008      	.DW  0x08
0000f7 0270      	.DW  __dollor
0000f8 007e      	.DW  _0x4*2
                 
0000f9 0008      	.DW  0x08
0000fa 0278      	.DW  __Ad
0000fb 0086      	.DW  _0x5*2
                 
0000fc 0007      	.DW  0x07
0000fd 0280      	.DW  _star
0000fe 008e      	.DW  _0x6*2
                 
0000ff 0007      	.DW  0x07
000100 0288      	.DW  __per
000101 0096      	.DW  _0x7*2
                 
000102 0004      	.DW  0x04
000103 0290      	.DW  __power
000104 009e      	.DW  _0x8*2
                 
000105 0007      	.DW  0x07
000106 0298      	.DW  __dot
000107 00a2      	.DW  _0x9*2
                 
000108 0007      	.DW  0x07
000109 02a0      	.DW  __comma
00010a 00aa      	.DW  _0xA*2
                 
00010b 0008      	.DW  0x08
00010c 02a8      	.DW  __Square
00010d 00b2      	.DW  _0xB*2
                 
00010e 0007      	.DW  0x07
00010f 02b0      	.DW  _A
000110 00ba      	.DW  _0xC*2
                 
000111 0007      	.DW  0x07
000112 02b8      	.DW  _B
000113 00c2      	.DW  _0xD*2
                 
000114 0007      	.DW  0x07
000115 02c0      	.DW  _C
000116 00ca      	.DW  _0xE*2
                 
000117 0007      	.DW  0x07
000118 02c8      	.DW  _D
000119 00d2      	.DW  _0xF*2
                 
00011a 0007      	.DW  0x07
00011b 02d0      	.DW  _E
00011c 00da      	.DW  _0x10*2
                 
00011d 0007      	.DW  0x07
00011e 02d8      	.DW  _F
00011f 00e2      	.DW  _0x11*2
                 
000120 0007      	.DW  0x07
000121 02e0      	.DW  _G
000122 00ea      	.DW  _0x12*2
                 
000123 0007      	.DW  0x07
000124 02e8      	.DW  _H
000125 00f2      	.DW  _0x13*2
                 
000126 0007      	.DW  0x07
000127 02f0      	.DW  __I
000128 00fa      	.DW  _0x14*2
                 
000129 0008      	.DW  0x08
00012a 02f8      	.DW  __J
00012b 0102      	.DW  _0x15*2
                 
00012c 0007      	.DW  0x07
00012d 0300      	.DW  _K
00012e 010a      	.DW  _0x16*2
                 
00012f 0007      	.DW  0x07
000130 0308      	.DW  _L
000131 0112      	.DW  _0x17*2
                 
000132 0007      	.DW  0x07
000133 0310      	.DW  _M
000134 011a      	.DW  _0x18*2
                 
000135 0007      	.DW  0x07
000136 0318      	.DW  _N
000137 0122      	.DW  _0x19*2
                 
000138 0007      	.DW  0x07
000139 0320      	.DW  _O
00013a 012a      	.DW  _0x1A*2
                 
00013b 0007      	.DW  0x07
00013c 0328      	.DW  _P
00013d 0132      	.DW  _0x1B*2
                 
00013e 0008      	.DW  0x08
00013f 0330      	.DW  _Q
000140 013a      	.DW  _0x1C*2
                 
000141 0007      	.DW  0x07
000142 0338      	.DW  _R
000143 0142      	.DW  _0x1D*2
                 
000144 0007      	.DW  0x07
000145 0340      	.DW  _S
000146 014a      	.DW  _0x1E*2
                 
000147 0007      	.DW  0x07
000148 0348      	.DW  _T
000149 0152      	.DW  _0x1F*2
                 
00014a 0007      	.DW  0x07
00014b 0350      	.DW  _U
00014c 015a      	.DW  _0x20*2
                 
00014d 0007      	.DW  0x07
00014e 0358      	.DW  _V
00014f 0162      	.DW  _0x21*2
                 
000150 0007      	.DW  0x07
000151 0360      	.DW  _W
000152 016a      	.DW  _0x22*2
                 
000153 0007      	.DW  0x07
000154 0368      	.DW  _X
000155 0172      	.DW  _0x23*2
                 
000156 0007      	.DW  0x07
000157 0370      	.DW  _Y
000158 017a      	.DW  _0x24*2
                 
000159 0007      	.DW  0x07
00015a 0378      	.DW  _Z
00015b 0182      	.DW  _0x25*2
                 
00015c 0008      	.DW  0x08
00015d 0380      	.DW  __0
00015e 018a      	.DW  _0x26*2
                 
00015f 0007      	.DW  0x07
000160 0388      	.DW  __1
000161 0192      	.DW  _0x27*2
                 
000162 0007      	.DW  0x07
000163 0390      	.DW  __2
000164 019a      	.DW  _0x28*2
                 
000165 0007      	.DW  0x07
000166 0398      	.DW  __3
000167 01a2      	.DW  _0x29*2
                 
000168 0007      	.DW  0x07
000169 03a0      	.DW  __4
00016a 01aa      	.DW  _0x2A*2
                 
00016b 0007      	.DW  0x07
00016c 03a8      	.DW  __5
00016d 01b2      	.DW  _0x2B*2
                 
00016e 0007      	.DW  0x07
00016f 03b0      	.DW  __6
000170 01ba      	.DW  _0x2C*2
                 
000171 0007      	.DW  0x07
000172 03b8      	.DW  __7
000173 01c2      	.DW  _0x2D*2
                 
000174 0007      	.DW  0x07
000175 03c0      	.DW  __8
000176 01ca      	.DW  _0x2E*2
                 
000177 0007      	.DW  0x07
000178 03c8      	.DW  __9
000179 01d2      	.DW  _0x2F*2
                 
00017a 0001      	.DW  0x01
00017b 05e3      	.DW  __seed_G102
00017c 01da      	.DW  _0x2040060*2
                 
                 _0xFFFFFFFF:
00017d 0000      	.DW  0
                 
                 #define __GLOBAL_INI_TBL_PRESENT 1
                 
                 __RESET:
00017e 94f8      	CLI
00017f 27ee      	CLR  R30
000180 bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
000181 e0f1      	LDI  R31,1
000182 bffb      	OUT  GICR,R31
000183 bfeb      	OUT  GICR,R30
000184 bfe5      	OUT  MCUCR,R30
                 
                 ;CLEAR R2-R14
000185 e08d      	LDI  R24,(14-2)+1
000186 e0a2      	LDI  R26,2
000187 27bb      	CLR  R27
                 __CLEAR_REG:
000188 93ed      	ST   X+,R30
000189 958a      	DEC  R24
00018a f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
00018b e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
00018c e098      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
00018d e6a0      	LDI  R26,__SRAM_START
                 __CLEAR_SRAM:
00018e 93ed      	ST   X+,R30
00018f 9701      	SBIW R24,1
000190 f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
000191 eee6      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
000192 e0f1      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
000193 9185      	LPM  R24,Z+
000194 9195      	LPM  R25,Z+
000195 9700      	SBIW R24,0
000196 f061      	BREQ __GLOBAL_INI_END
000197 91a5      	LPM  R26,Z+
000198 91b5      	LPM  R27,Z+
000199 9005      	LPM  R0,Z+
00019a 9015      	LPM  R1,Z+
00019b 01bf      	MOVW R22,R30
00019c 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
00019d 9005      	LPM  R0,Z+
00019e 920d      	ST   X+,R0
00019f 9701      	SBIW R24,1
0001a0 f7e1      	BRNE __GLOBAL_INI_LOOP
0001a1 01fb      	MOVW R30,R22
0001a2 cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
0001a3 e5ef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
0001a4 bfed      	OUT  SPL,R30
0001a5 e0e8      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
0001a6 bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
0001a7 e6c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
0001a8 e0d2      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
0001a9 940c 04ee 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x260
                 
                 	.CSEG
                 ;#include <mega32.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x80
                 	.EQU __sm_mask=0x70
                 	.EQU __sm_powerdown=0x20
                 	.EQU __sm_powersave=0x30
                 	.EQU __sm_standby=0x60
                 	.EQU __sm_ext_standby=0x70
                 	.EQU __sm_adc_noise_red=0x10
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;#include <io.h>
                 ;#include <display.h>
                 ;#include <delay.h>
                 ;#include <stdio.h>
                 ;#include <string.h>
                 ;#include <alpha.h>
                 
                 	.DSEG
                 ;#include <Stdlib.h>
                 ;
                 ;#define up      1
                 ;#define down    0
                 ;
                 ;
                 ;char *Rx_Display,*Display1,*Display2,*Display3,*Display4,contin=0,mul=0;
                 ;unsigned char receive=0,finish=0,cnt=0,flag=0,dis[4],show[256],show1[256],done=0,j,sh_cnt=0,sh1_cnt=0,sh2_cnt=0,rr[4];
                 ;
                 ;
                 ;void Search_dis(char *dis,char i)
                 ; 0000 0013 {
                 
                 	.CSEG
                 _Search_dis:
                 ; .FSTART _Search_dis
                 ; 0000 0014 
                 ; 0000 0015 if(dis[i]=='A')
0001ab 93aa      	ST   -Y,R26
                 ;	*dis -> Y+1
                 ;	i -> Y+0
0001ac 940e 064c 	CALL SUBOPT_0x0
0001ae 34a1      	CPI  R26,LOW(0x41)
0001af f419      	BRNE _0x30
                 ; 0000 0016 Rx_Display=A;
0001b0 ebe0      	LDI  R30,LOW(_A)
0001b1 e0f2      	LDI  R31,HIGH(_A)
0001b2 c13f      	RJMP _0x123
                 ; 0000 0017 else
                 _0x30:
                 ; 0000 0018 if(dis[i]=='B')
0001b3 940e 064c 	CALL SUBOPT_0x0
0001b5 34a2      	CPI  R26,LOW(0x42)
0001b6 f419      	BRNE _0x32
                 ; 0000 0019 Rx_Display=B;
0001b7 ebe8      	LDI  R30,LOW(_B)
0001b8 e0f2      	LDI  R31,HIGH(_B)
0001b9 c138      	RJMP _0x123
                 ; 0000 001A else
                 _0x32:
                 ; 0000 001B if(dis[i]=='C')
0001ba 940e 064c 	CALL SUBOPT_0x0
0001bc 34a3      	CPI  R26,LOW(0x43)
0001bd f419      	BRNE _0x34
                 ; 0000 001C Rx_Display=C;
0001be ece0      	LDI  R30,LOW(_C)
0001bf e0f2      	LDI  R31,HIGH(_C)
0001c0 c131      	RJMP _0x123
                 ; 0000 001D else
                 _0x34:
                 ; 0000 001E if(dis[i]=='D')
0001c1 940e 064c 	CALL SUBOPT_0x0
0001c3 34a4      	CPI  R26,LOW(0x44)
0001c4 f419      	BRNE _0x36
                 ; 0000 001F Rx_Display=D;
0001c5 ece8      	LDI  R30,LOW(_D)
0001c6 e0f2      	LDI  R31,HIGH(_D)
0001c7 c12a      	RJMP _0x123
                 ; 0000 0020 else
                 _0x36:
                 ; 0000 0021 if(dis[i]=='E')
0001c8 940e 064c 	CALL SUBOPT_0x0
0001ca 34a5      	CPI  R26,LOW(0x45)
0001cb f419      	BRNE _0x38
                 ; 0000 0022 Rx_Display=E;
0001cc ede0      	LDI  R30,LOW(_E)
0001cd e0f2      	LDI  R31,HIGH(_E)
0001ce c123      	RJMP _0x123
                 ; 0000 0023 else
                 _0x38:
                 ; 0000 0024 if(dis[i]=='F')
0001cf 940e 064c 	CALL SUBOPT_0x0
0001d1 34a6      	CPI  R26,LOW(0x46)
0001d2 f419      	BRNE _0x3A
                 ; 0000 0025 Rx_Display=F;
0001d3 ede8      	LDI  R30,LOW(_F)
0001d4 e0f2      	LDI  R31,HIGH(_F)
0001d5 c11c      	RJMP _0x123
                 ; 0000 0026 else
                 _0x3A:
                 ; 0000 0027 if(dis[i]=='G')
0001d6 940e 064c 	CALL SUBOPT_0x0
0001d8 34a7      	CPI  R26,LOW(0x47)
0001d9 f419      	BRNE _0x3C
                 ; 0000 0028 Rx_Display=G;
0001da eee0      	LDI  R30,LOW(_G)
0001db e0f2      	LDI  R31,HIGH(_G)
0001dc c115      	RJMP _0x123
                 ; 0000 0029 else
                 _0x3C:
                 ; 0000 002A if(dis[i]=='H')
0001dd 940e 064c 	CALL SUBOPT_0x0
0001df 34a8      	CPI  R26,LOW(0x48)
0001e0 f419      	BRNE _0x3E
                 ; 0000 002B Rx_Display=H;
0001e1 eee8      	LDI  R30,LOW(_H)
0001e2 e0f2      	LDI  R31,HIGH(_H)
0001e3 c10e      	RJMP _0x123
                 ; 0000 002C else
                 _0x3E:
                 ; 0000 002D if(dis[i]=='I')
0001e4 940e 064c 	CALL SUBOPT_0x0
0001e6 34a9      	CPI  R26,LOW(0x49)
0001e7 f419      	BRNE _0x40
                 ; 0000 002E Rx_Display=_I;
0001e8 efe0      	LDI  R30,LOW(__I)
0001e9 e0f2      	LDI  R31,HIGH(__I)
0001ea c107      	RJMP _0x123
                 ; 0000 002F else
                 _0x40:
                 ; 0000 0030 if(dis[i]=='J')
0001eb 940e 064c 	CALL SUBOPT_0x0
0001ed 34aa      	CPI  R26,LOW(0x4A)
0001ee f419      	BRNE _0x42
                 ; 0000 0031 Rx_Display=_J;
0001ef efe8      	LDI  R30,LOW(__J)
0001f0 e0f2      	LDI  R31,HIGH(__J)
0001f1 c100      	RJMP _0x123
                 ; 0000 0032 else
                 _0x42:
                 ; 0000 0033 if(dis[i]=='K')
0001f2 940e 064c 	CALL SUBOPT_0x0
0001f4 34ab      	CPI  R26,LOW(0x4B)
0001f5 f419      	BRNE _0x44
                 ; 0000 0034 Rx_Display=K;
0001f6 e0e0      	LDI  R30,LOW(_K)
0001f7 e0f3      	LDI  R31,HIGH(_K)
0001f8 c0f9      	RJMP _0x123
                 ; 0000 0035 else
                 _0x44:
                 ; 0000 0036 if(dis[i]=='L')
0001f9 940e 064c 	CALL SUBOPT_0x0
0001fb 34ac      	CPI  R26,LOW(0x4C)
0001fc f419      	BRNE _0x46
                 ; 0000 0037 Rx_Display=L;
0001fd e0e8      	LDI  R30,LOW(_L)
0001fe e0f3      	LDI  R31,HIGH(_L)
0001ff c0f2      	RJMP _0x123
                 ; 0000 0038 else
                 _0x46:
                 ; 0000 0039 if(dis[i]=='M')
000200 940e 064c 	CALL SUBOPT_0x0
000202 34ad      	CPI  R26,LOW(0x4D)
000203 f419      	BRNE _0x48
                 ; 0000 003A Rx_Display=M;
000204 e1e0      	LDI  R30,LOW(_M)
000205 e0f3      	LDI  R31,HIGH(_M)
000206 c0eb      	RJMP _0x123
                 ; 0000 003B else
                 _0x48:
                 ; 0000 003C if(dis[i]=='N')
000207 940e 064c 	CALL SUBOPT_0x0
000209 34ae      	CPI  R26,LOW(0x4E)
00020a f419      	BRNE _0x4A
                 ; 0000 003D Rx_Display=N;
00020b e1e8      	LDI  R30,LOW(_N)
00020c e0f3      	LDI  R31,HIGH(_N)
00020d c0e4      	RJMP _0x123
                 ; 0000 003E else
                 _0x4A:
                 ; 0000 003F if(dis[i]=='O')
00020e 940e 064c 	CALL SUBOPT_0x0
000210 34af      	CPI  R26,LOW(0x4F)
000211 f419      	BRNE _0x4C
                 ; 0000 0040 Rx_Display=O;
000212 e2e0      	LDI  R30,LOW(_O)
000213 e0f3      	LDI  R31,HIGH(_O)
000214 c0dd      	RJMP _0x123
                 ; 0000 0041 else
                 _0x4C:
                 ; 0000 0042 if(dis[i]=='P')
000215 940e 064c 	CALL SUBOPT_0x0
000217 35a0      	CPI  R26,LOW(0x50)
000218 f419      	BRNE _0x4E
                 ; 0000 0043 Rx_Display=P;
000219 e2e8      	LDI  R30,LOW(_P)
00021a e0f3      	LDI  R31,HIGH(_P)
00021b c0d6      	RJMP _0x123
                 ; 0000 0044 else
                 _0x4E:
                 ; 0000 0045 if(dis[i]=='Q')
00021c 940e 064c 	CALL SUBOPT_0x0
00021e 35a1      	CPI  R26,LOW(0x51)
00021f f419      	BRNE _0x50
                 ; 0000 0046 Rx_Display=Q;
000220 e3e0      	LDI  R30,LOW(_Q)
000221 e0f3      	LDI  R31,HIGH(_Q)
000222 c0cf      	RJMP _0x123
                 ; 0000 0047 else
                 _0x50:
                 ; 0000 0048 if(dis[i]=='R')
000223 940e 064c 	CALL SUBOPT_0x0
000225 35a2      	CPI  R26,LOW(0x52)
000226 f419      	BRNE _0x52
                 ; 0000 0049 Rx_Display=R;
000227 e3e8      	LDI  R30,LOW(_R)
000228 e0f3      	LDI  R31,HIGH(_R)
000229 c0c8      	RJMP _0x123
                 ; 0000 004A else
                 _0x52:
                 ; 0000 004B if(dis[i]=='S')
00022a 940e 064c 	CALL SUBOPT_0x0
00022c 35a3      	CPI  R26,LOW(0x53)
00022d f419      	BRNE _0x54
                 ; 0000 004C Rx_Display=S;
00022e e4e0      	LDI  R30,LOW(_S)
00022f e0f3      	LDI  R31,HIGH(_S)
000230 c0c1      	RJMP _0x123
                 ; 0000 004D else
                 _0x54:
                 ; 0000 004E if(dis[i]=='T')
000231 940e 064c 	CALL SUBOPT_0x0
000233 35a4      	CPI  R26,LOW(0x54)
000234 f419      	BRNE _0x56
                 ; 0000 004F Rx_Display=T;
000235 e4e8      	LDI  R30,LOW(_T)
000236 e0f3      	LDI  R31,HIGH(_T)
000237 c0ba      	RJMP _0x123
                 ; 0000 0050 else
                 _0x56:
                 ; 0000 0051 if(dis[i]=='U')
000238 940e 064c 	CALL SUBOPT_0x0
00023a 35a5      	CPI  R26,LOW(0x55)
00023b f419      	BRNE _0x58
                 ; 0000 0052 Rx_Display=U;
00023c e5e0      	LDI  R30,LOW(_U)
00023d e0f3      	LDI  R31,HIGH(_U)
00023e c0b3      	RJMP _0x123
                 ; 0000 0053 else
                 _0x58:
                 ; 0000 0054 if(dis[i]=='V')
00023f 940e 064c 	CALL SUBOPT_0x0
000241 35a6      	CPI  R26,LOW(0x56)
000242 f419      	BRNE _0x5A
                 ; 0000 0055 Rx_Display=V;
000243 e5e8      	LDI  R30,LOW(_V)
000244 e0f3      	LDI  R31,HIGH(_V)
000245 c0ac      	RJMP _0x123
                 ; 0000 0056 else
                 _0x5A:
                 ; 0000 0057 if(dis[i]=='W')
000246 940e 064c 	CALL SUBOPT_0x0
000248 35a7      	CPI  R26,LOW(0x57)
000249 f419      	BRNE _0x5C
                 ; 0000 0058 Rx_Display=W;
00024a e6e0      	LDI  R30,LOW(_W)
00024b e0f3      	LDI  R31,HIGH(_W)
00024c c0a5      	RJMP _0x123
                 ; 0000 0059 else
                 _0x5C:
                 ; 0000 005A if(dis[i]=='X')
00024d 940e 064c 	CALL SUBOPT_0x0
00024f 35a8      	CPI  R26,LOW(0x58)
000250 f419      	BRNE _0x5E
                 ; 0000 005B Rx_Display=X;
000251 e6e8      	LDI  R30,LOW(_X)
000252 e0f3      	LDI  R31,HIGH(_X)
000253 c09e      	RJMP _0x123
                 ; 0000 005C else
                 _0x5E:
                 ; 0000 005D if(dis[i]=='Y')
000254 940e 064c 	CALL SUBOPT_0x0
000256 35a9      	CPI  R26,LOW(0x59)
000257 f419      	BRNE _0x60
                 ; 0000 005E Rx_Display=Y;
000258 e7e0      	LDI  R30,LOW(_Y)
000259 e0f3      	LDI  R31,HIGH(_Y)
00025a c097      	RJMP _0x123
                 ; 0000 005F else
                 _0x60:
                 ; 0000 0060 if(dis[i]=='Z')
00025b 940e 064c 	CALL SUBOPT_0x0
00025d 35aa      	CPI  R26,LOW(0x5A)
00025e f419      	BRNE _0x62
                 ; 0000 0061 Rx_Display=Z;
00025f e7e8      	LDI  R30,LOW(_Z)
000260 e0f3      	LDI  R31,HIGH(_Z)
000261 c090      	RJMP _0x123
                 ; 0000 0062 else
                 _0x62:
                 ; 0000 0063 if(dis[i]=='0')
000262 940e 064c 	CALL SUBOPT_0x0
000264 33a0      	CPI  R26,LOW(0x30)
000265 f419      	BRNE _0x64
                 ; 0000 0064 Rx_Display=_0;
000266 e8e0      	LDI  R30,LOW(__0)
000267 e0f3      	LDI  R31,HIGH(__0)
000268 c089      	RJMP _0x123
                 ; 0000 0065 else
                 _0x64:
                 ; 0000 0066 if(dis[i]=='1')
000269 940e 064c 	CALL SUBOPT_0x0
00026b 33a1      	CPI  R26,LOW(0x31)
00026c f419      	BRNE _0x66
                 ; 0000 0067 Rx_Display=_1;
00026d e8e8      	LDI  R30,LOW(__1)
00026e e0f3      	LDI  R31,HIGH(__1)
00026f c082      	RJMP _0x123
                 ; 0000 0068 else
                 _0x66:
                 ; 0000 0069 if(dis[i]=='2')
000270 940e 064c 	CALL SUBOPT_0x0
000272 33a2      	CPI  R26,LOW(0x32)
000273 f419      	BRNE _0x68
                 ; 0000 006A Rx_Display=_2;
000274 e9e0      	LDI  R30,LOW(__2)
000275 e0f3      	LDI  R31,HIGH(__2)
000276 c07b      	RJMP _0x123
                 ; 0000 006B else
                 _0x68:
                 ; 0000 006C if(dis[i]=='3')
000277 940e 064c 	CALL SUBOPT_0x0
000279 33a3      	CPI  R26,LOW(0x33)
00027a f419      	BRNE _0x6A
                 ; 0000 006D Rx_Display=_3;
00027b e9e8      	LDI  R30,LOW(__3)
00027c e0f3      	LDI  R31,HIGH(__3)
00027d c074      	RJMP _0x123
                 ; 0000 006E else
                 _0x6A:
                 ; 0000 006F if(dis[i]=='4')
00027e 940e 064c 	CALL SUBOPT_0x0
000280 33a4      	CPI  R26,LOW(0x34)
000281 f419      	BRNE _0x6C
                 ; 0000 0070 Rx_Display=_4;
000282 eae0      	LDI  R30,LOW(__4)
000283 e0f3      	LDI  R31,HIGH(__4)
000284 c06d      	RJMP _0x123
                 ; 0000 0071 else
                 _0x6C:
                 ; 0000 0072 if(dis[i]=='5')
000285 940e 064c 	CALL SUBOPT_0x0
000287 33a5      	CPI  R26,LOW(0x35)
000288 f419      	BRNE _0x6E
                 ; 0000 0073 Rx_Display=_5;
000289 eae8      	LDI  R30,LOW(__5)
00028a e0f3      	LDI  R31,HIGH(__5)
00028b c066      	RJMP _0x123
                 ; 0000 0074 else
                 _0x6E:
                 ; 0000 0075 if(dis[i]=='6')
00028c 940e 064c 	CALL SUBOPT_0x0
00028e 33a6      	CPI  R26,LOW(0x36)
00028f f419      	BRNE _0x70
                 ; 0000 0076 Rx_Display=_6;
000290 ebe0      	LDI  R30,LOW(__6)
000291 e0f3      	LDI  R31,HIGH(__6)
000292 c05f      	RJMP _0x123
                 ; 0000 0077 else
                 _0x70:
                 ; 0000 0078 if(dis[i]=='7')
000293 940e 064c 	CALL SUBOPT_0x0
000295 33a7      	CPI  R26,LOW(0x37)
000296 f419      	BRNE _0x72
                 ; 0000 0079 Rx_Display=_7;
000297 ebe8      	LDI  R30,LOW(__7)
000298 e0f3      	LDI  R31,HIGH(__7)
000299 c058      	RJMP _0x123
                 ; 0000 007A else
                 _0x72:
                 ; 0000 007B if(dis[i]=='8')
00029a 940e 064c 	CALL SUBOPT_0x0
00029c 33a8      	CPI  R26,LOW(0x38)
00029d f419      	BRNE _0x74
                 ; 0000 007C Rx_Display=_8;
00029e ece0      	LDI  R30,LOW(__8)
00029f e0f3      	LDI  R31,HIGH(__8)
0002a0 c051      	RJMP _0x123
                 ; 0000 007D else
                 _0x74:
                 ; 0000 007E if(dis[i]=='9')
0002a1 940e 064c 	CALL SUBOPT_0x0
0002a3 33a9      	CPI  R26,LOW(0x39)
0002a4 f419      	BRNE _0x76
                 ; 0000 007F Rx_Display=_9;
0002a5 ece8      	LDI  R30,LOW(__9)
0002a6 e0f3      	LDI  R31,HIGH(__9)
0002a7 c04a      	RJMP _0x123
                 ; 0000 0080 else
                 _0x76:
                 ; 0000 0081 if(dis[i]=='#')
0002a8 940e 064c 	CALL SUBOPT_0x0
0002aa 32a3      	CPI  R26,LOW(0x23)
0002ab f419      	BRNE _0x78
                 ; 0000 0082 Rx_Display=_Square;
0002ac eae8      	LDI  R30,LOW(__Square)
0002ad e0f2      	LDI  R31,HIGH(__Square)
0002ae c043      	RJMP _0x123
                 ; 0000 0083 else
                 _0x78:
                 ; 0000 0084 if(dis[i]==',')
0002af 940e 064c 	CALL SUBOPT_0x0
0002b1 32ac      	CPI  R26,LOW(0x2C)
0002b2 f419      	BRNE _0x7A
                 ; 0000 0085 Rx_Display=_comma;
0002b3 eae0      	LDI  R30,LOW(__comma)
0002b4 e0f2      	LDI  R31,HIGH(__comma)
0002b5 c03c      	RJMP _0x123
                 ; 0000 0086 else
                 _0x7A:
                 ; 0000 0087 if(dis[i]=='.')
0002b6 940e 064c 	CALL SUBOPT_0x0
0002b8 32ae      	CPI  R26,LOW(0x2E)
0002b9 f419      	BRNE _0x7C
                 ; 0000 0088 Rx_Display=_dot;
0002ba e9e8      	LDI  R30,LOW(__dot)
0002bb e0f2      	LDI  R31,HIGH(__dot)
0002bc c035      	RJMP _0x123
                 ; 0000 0089 else
                 _0x7C:
                 ; 0000 008A if(dis[i]=='^')
0002bd 940e 064c 	CALL SUBOPT_0x0
0002bf 35ae      	CPI  R26,LOW(0x5E)
0002c0 f419      	BRNE _0x7E
                 ; 0000 008B Rx_Display=_power;
0002c1 e9e0      	LDI  R30,LOW(__power)
0002c2 e0f2      	LDI  R31,HIGH(__power)
0002c3 c02e      	RJMP _0x123
                 ; 0000 008C else
                 _0x7E:
                 ; 0000 008D if(dis[i]=='%')
0002c4 940e 064c 	CALL SUBOPT_0x0
0002c6 32a5      	CPI  R26,LOW(0x25)
0002c7 f419      	BRNE _0x80
                 ; 0000 008E Rx_Display=_per;
0002c8 e8e8      	LDI  R30,LOW(__per)
0002c9 e0f2      	LDI  R31,HIGH(__per)
0002ca c027      	RJMP _0x123
                 ; 0000 008F else
                 _0x80:
                 ; 0000 0090 if(dis[i]=='*')
0002cb 940e 064c 	CALL SUBOPT_0x0
0002cd 32aa      	CPI  R26,LOW(0x2A)
0002ce f419      	BRNE _0x82
                 ; 0000 0091 Rx_Display=star;
0002cf e8e0      	LDI  R30,LOW(_star)
0002d0 e0f2      	LDI  R31,HIGH(_star)
0002d1 c020      	RJMP _0x123
                 ; 0000 0092 else
                 _0x82:
                 ; 0000 0093 if(dis[i]=='@')
0002d2 940e 064c 	CALL SUBOPT_0x0
0002d4 34a0      	CPI  R26,LOW(0x40)
0002d5 f419      	BRNE _0x84
                 ; 0000 0094 Rx_Display=_Ad;
0002d6 e7e8      	LDI  R30,LOW(__Ad)
0002d7 e0f2      	LDI  R31,HIGH(__Ad)
0002d8 c019      	RJMP _0x123
                 ; 0000 0095 else
                 _0x84:
                 ; 0000 0096 if(dis[i]=='$')
0002d9 940e 064c 	CALL SUBOPT_0x0
0002db 32a4      	CPI  R26,LOW(0x24)
0002dc f419      	BRNE _0x86
                 ; 0000 0097 Rx_Display=_dollor;
0002dd e7e0      	LDI  R30,LOW(__dollor)
0002de e0f2      	LDI  R31,HIGH(__dollor)
0002df c012      	RJMP _0x123
                 ; 0000 0098 else
                 _0x86:
                 ; 0000 0099 if(dis[i]=='&')
0002e0 940e 064c 	CALL SUBOPT_0x0
0002e2 32a6      	CPI  R26,LOW(0x26)
0002e3 f419      	BRNE _0x88
                 ; 0000 009A Rx_Display=and;
0002e4 e6e8      	LDI  R30,LOW(_and)
0002e5 e0f2      	LDI  R31,HIGH(_and)
0002e6 c00b      	RJMP _0x123
                 ; 0000 009B else
                 _0x88:
                 ; 0000 009C if(dis[i]==0x00)
0002e7 81e8      	LD   R30,Y
0002e8 81a9      	LDD  R26,Y+1
0002e9 81ba      	LDD  R27,Y+1+1
0002ea e0f0      	LDI  R31,0
0002eb 0fae      	ADD  R26,R30
0002ec 1fbf      	ADC  R27,R31
0002ed 91ec      	LD   R30,X
0002ee 30e0      	CPI  R30,0
0002ef f419      	BRNE _0x8A
                 ; 0000 009D Rx_Display=_empty;
0002f0 e6e0      	LDI  R30,LOW(__empty)
0002f1 e0f2      	LDI  R31,HIGH(__empty)
                 _0x123:
0002f2 012f      	MOVW R4,R30
                 ; 0000 009E }
                 _0x8A:
0002f3 9623      	ADIW R28,3
0002f4 9508      	RET
                 ; .FEND
                 ;
                 ;char ID(void)
                 ; 0000 00A1 {
                 _ID:
                 ; .FSTART _ID
                 ; 0000 00A2 return (PINB & 0x0f);
0002f5 b3e6      	IN   R30,0x16
0002f6 70ef      	ANDI R30,LOW(0xF)
0002f7 9508      	RET
                 ; 0000 00A3 }
                 ; .FEND
                 ;
                 ;interrupt [USART_RXC] void usart_rx_isr(void)
                 ; 0000 00A6 {
                 _usart_rx_isr:
                 ; .FSTART _usart_rx_isr
0002f8 920a      	ST   -Y,R0
0002f9 921a      	ST   -Y,R1
0002fa 92fa      	ST   -Y,R15
0002fb 936a      	ST   -Y,R22
0002fc 937a      	ST   -Y,R23
0002fd 938a      	ST   -Y,R24
0002fe 939a      	ST   -Y,R25
0002ff 93aa      	ST   -Y,R26
000300 93ba      	ST   -Y,R27
000301 93ea      	ST   -Y,R30
000302 93fa      	ST   -Y,R31
000303 b7ef      	IN   R30,SREG
000304 93ea      	ST   -Y,R30
                 ; 0000 00A7 
                 ; 0000 00A8 
                 ; 0000 00A9      receive=UDR;
000305 b1ec      	IN   R30,0xC
000306 93e0 03d2 	STS  _receive,R30
                 ; 0000 00AA          if(flag==1)
000308 91a0 03d5 	LDS  R26,_flag
00030a 30a1      	CPI  R26,LOW(0x1)
00030b f009      	BREQ PC+2
00030c c0b8      	RJMP _0x8B
                 ; 0000 00AB      {
                 ; 0000 00AC 
                 ; 0000 00AD 
                 ; 0000 00AE             if(receive=='{')
00030d 91a0 03d2 	LDS  R26,_receive
00030f 37ab      	CPI  R26,LOW(0x7B)
000310 f4e9      	BRNE _0x8C
                 ; 0000 00AF             {
                 ; 0000 00B0 
                 ; 0000 00B1                 finish=0;
000311 e0e0      	LDI  R30,LOW(0)
000312 93e0 03d3 	STS  _finish,R30
                 ; 0000 00B2                 cnt=0;
000314 93e0 03d4 	STS  _cnt,R30
                 ; 0000 00B3                 memset(dis,0,4);
000316 940e 0654 	CALL SUBOPT_0x1
                 ; 0000 00B4 
                 ; 0000 00B5                     if(done==1)
000318 91a0 05da 	LDS  R26,_done
00031a 30a1      	CPI  R26,LOW(0x1)
00031b f489      	BRNE _0x8D
                 ; 0000 00B6                     {
                 ; 0000 00B7 
                 ; 0000 00B8                         memset(show,0,4);
00031c 940e 065e 	CALL SUBOPT_0x2
00031e 940e 0663 	CALL SUBOPT_0x3
                 ; 0000 00B9                         memset(show1,0,4);
000320 edea      	LDI  R30,LOW(_show1)
000321 e0f4      	LDI  R31,HIGH(_show1)
000322 93fa      	ST   -Y,R31
000323 93ea      	ST   -Y,R30
000324 940e 0663 	CALL SUBOPT_0x3
                 ; 0000 00BA                         sh_cnt=0;
000326 e0e0      	LDI  R30,LOW(0)
000327 93e0 05dc 	STS  _sh_cnt,R30
                 ; 0000 00BB                         sh1_cnt=0;
000329 93e0 05dd 	STS  _sh1_cnt,R30
                 ; 0000 00BC                         done=0;
00032b 93e0 05da 	STS  _done,R30
                 ; 0000 00BD 
                 ; 0000 00BE                 }
                 ; 0000 00BF             }
                 _0x8D:
                 ; 0000 00C0 
                 ; 0000 00C1             else
00032d c097      	RJMP _0x8E
                 _0x8C:
                 ; 0000 00C2 
                 ; 0000 00C3                 if(receive==0xff)
00032e 91a0 03d2 	LDS  R26,_receive
000330 3faf      	CPI  R26,LOW(0xFF)
000331 f5e9      	BRNE _0x8F
                 ; 0000 00C4                 {
                 ; 0000 00C5 
                 ; 0000 00C6                     finish=1;
000332 e0e1      	LDI  R30,LOW(1)
000333 93e0 03d3 	STS  _finish,R30
                 ; 0000 00C7                     memset(dis,0,4);
000335 940e 0654 	CALL SUBOPT_0x1
                 ; 0000 00C8                     sh2_cnt=sh1_cnt;
000337 91e0 05dd 	LDS  R30,_sh1_cnt
000339 93e0 05de 	STS  _sh2_cnt,R30
                 ; 0000 00C9 
                 ; 0000 00CA                     for(j=sh_cnt;j<=sh1_cnt;j++)
00033b 91e0 05dc 	LDS  R30,_sh_cnt
00033d 93e0 05db 	STS  _j,R30
                 _0x91:
00033f 91e0 05dd 	LDS  R30,_sh1_cnt
000341 91a0 05db 	LDS  R26,_j
000343 17ea      	CP   R30,R26
000344 f148      	BRLO _0x92
                 ; 0000 00CB                     {
                 ; 0000 00CC 
                 ; 0000 00CD                     show[sh_cnt]=show1[j];
000345 91a0 05dc 	LDS  R26,_sh_cnt
000347 e0b0      	LDI  R27,0
000348 52a6      	SUBI R26,LOW(-_show)
000349 4fbc      	SBCI R27,HIGH(-_show)
00034a 91e0 05db 	LDS  R30,_j
00034c e0f0      	LDI  R31,0
00034d 52e6      	SUBI R30,LOW(-_show1)
00034e 4ffb      	SBCI R31,HIGH(-_show1)
00034f 81e0      	LD   R30,Z
000350 93ec      	ST   X,R30
                 ; 0000 00CE                     sh_cnt++;
000351 91e0 05dc 	LDS  R30,_sh_cnt
000353 5fef      	SUBI R30,-LOW(1)
000354 93e0 05dc 	STS  _sh_cnt,R30
                 ; 0000 00CF                     sh2_cnt++;
000356 91e0 05de 	LDS  R30,_sh2_cnt
000358 5fef      	SUBI R30,-LOW(1)
000359 93e0 05de 	STS  _sh2_cnt,R30
                 ; 0000 00D0 
                 ; 0000 00D1                         if(sh2_cnt>sh1_cnt)
00035b 91e0 05dd 	LDS  R30,_sh1_cnt
00035d 91a0 05de 	LDS  R26,_sh2_cnt
00035f 17ea      	CP   R30,R26
000360 f418      	BRSH _0x93
                 ; 0000 00D2                            sh2_cnt=0;
000361 e0e0      	LDI  R30,LOW(0)
000362 93e0 05de 	STS  _sh2_cnt,R30
                 ; 0000 00D3 
                 ; 0000 00D4                         if(sh_cnt>=255)
                 _0x93:
000364 91a0 05dc 	LDS  R26,_sh_cnt
000366 3faf      	CPI  R26,LOW(0xFF)
000367 f018      	BRLO _0x94
                 ; 0000 00D5                           sh_cnt=0;
000368 e0e0      	LDI  R30,LOW(0)
000369 93e0 05dc 	STS  _sh_cnt,R30
                 ; 0000 00D6 
                 ; 0000 00D7                 }
                 _0x94:
00036b 940e 0669 	CALL SUBOPT_0x4
00036d cfd1      	RJMP _0x91
                 _0x92:
                 ; 0000 00D8                 }
                 ; 0000 00D9 
                 ; 0000 00DA             else
00036e c056      	RJMP _0x95
                 _0x8F:
                 ; 0000 00DB 
                 ; 0000 00DC                 if(receive=='}')
00036f 91a0 03d2 	LDS  R26,_receive
000371 37ad      	CPI  R26,LOW(0x7D)
000372 f009      	BREQ PC+2
000373 c042      	RJMP _0x96
                 ; 0000 00DD                 {
                 ; 0000 00DE 
                 ; 0000 00DF                     if(finish!=1)
000374 91a0 03d3 	LDS  R26,_finish
000376 30a1      	CPI  R26,LOW(0x1)
000377 f199      	BREQ _0x97
                 ; 0000 00E0                     {
                 ; 0000 00E1 
                 ; 0000 00E2                         for(j=0;j<=cnt;j++)
000378 e0e0      	LDI  R30,LOW(0)
000379 93e0 05db 	STS  _j,R30
                 _0x99:
00037b 91e0 03d4 	LDS  R30,_cnt
00037d 91a0 05db 	LDS  R26,_j
00037f 17ea      	CP   R30,R26
000380 f148      	BRLO _0x9A
                 ; 0000 00E3                         {
                 ; 0000 00E4 
                 ; 0000 00E5                             if((dis[j]!=0x00)&&(dis[j]!=0x07))
000381 91e0 05db 	LDS  R30,_j
000383 e0f0      	LDI  R31,0
000384 52ea      	SUBI R30,LOW(-_dis)
000385 4ffc      	SBCI R31,HIGH(-_dis)
000386 81a0      	LD   R26,Z
000387 30a0      	CPI  R26,LOW(0x0)
000388 f011      	BREQ _0x9C
000389 30a7      	CPI  R26,LOW(0x7)
00038a f409      	BRNE _0x9D
                 _0x9C:
00038b c012      	RJMP _0x9B
                 _0x9D:
                 ; 0000 00E6                             {
                 ; 0000 00E7                             show1[sh1_cnt]=dis[j];
00038c 91a0 05dd 	LDS  R26,_sh1_cnt
00038e e0b0      	LDI  R27,0
00038f 52a6      	SUBI R26,LOW(-_show1)
000390 4fbb      	SBCI R27,HIGH(-_show1)
000391 91e0 05db 	LDS  R30,_j
000393 e0f0      	LDI  R31,0
000394 52ea      	SUBI R30,LOW(-_dis)
000395 4ffc      	SBCI R31,HIGH(-_dis)
000396 81e0      	LD   R30,Z
000397 93ec      	ST   X,R30
                 ; 0000 00E8                             sh1_cnt++;
000398 91e0 05dd 	LDS  R30,_sh1_cnt
00039a 5fef      	SUBI R30,-LOW(1)
00039b 93e0 05dd 	STS  _sh1_cnt,R30
                 ; 0000 00E9                             }
                 ; 0000 00EA 
                 ; 0000 00EB                     else
00039d c002      	RJMP _0x9E
                 _0x9B:
                 ; 0000 00EC                      j++;
00039e 940e 0669 	CALL SUBOPT_0x4
                 ; 0000 00ED 
                 ; 0000 00EE                             if(sh1_cnt>=255)
                 _0x9E:
0003a0 91a0 05dd 	LDS  R26,_sh1_cnt
0003a2 3faf      	CPI  R26,LOW(0xFF)
0003a3 f018      	BRLO _0x9F
                 ; 0000 00EF                               sh1_cnt=0;
0003a4 e0e0      	LDI  R30,LOW(0)
0003a5 93e0 05dd 	STS  _sh1_cnt,R30
                 ; 0000 00F0 
                 ; 0000 00F1                     }
                 _0x9F:
0003a7 940e 0669 	CALL SUBOPT_0x4
0003a9 cfd1      	RJMP _0x99
                 _0x9A:
                 ; 0000 00F2 
                 ; 0000 00F3 
                 ; 0000 00F4             }
                 ; 0000 00F5 
                 ; 0000 00F6             else
0003aa c007      	RJMP _0xA0
                 _0x97:
                 ; 0000 00F7 
                 ; 0000 00F8                 if(finish==1)
0003ab 91a0 03d3 	LDS  R26,_finish
0003ad 30a1      	CPI  R26,LOW(0x1)
0003ae f419      	BRNE _0xA1
                 ; 0000 00F9 
                 ; 0000 00FA                 done=1;
0003af e0e1      	LDI  R30,LOW(1)
0003b0 93e0 05da 	STS  _done,R30
                 ; 0000 00FB 
                 ; 0000 00FC 
                 ; 0000 00FD             flag=0;
                 _0xA1:
                 _0xA0:
0003b2 e0e0      	LDI  R30,LOW(0)
0003b3 93e0 03d5 	STS  _flag,R30
                 ; 0000 00FE 
                 ; 0000 00FF             }
                 ; 0000 0100 
                 ; 0000 0101             else
0003b5 c00f      	RJMP _0xA2
                 _0x96:
                 ; 0000 0102             {
                 ; 0000 0103 
                 ; 0000 0104                 if(receive!=0x0A)
0003b6 91a0 03d2 	LDS  R26,_receive
0003b8 30aa      	CPI  R26,LOW(0xA)
0003b9 f059      	BREQ _0xA3
                 ; 0000 0105                 {
                 ; 0000 0106 
                 ; 0000 0107                 dis[cnt]=receive;
0003ba 91e0 03d4 	LDS  R30,_cnt
0003bc e0f0      	LDI  R31,0
0003bd 52ea      	SUBI R30,LOW(-_dis)
0003be 4ffc      	SBCI R31,HIGH(-_dis)
0003bf 83a0      	STD  Z+0,R26
                 ; 0000 0108                 cnt++;
0003c0 91e0 03d4 	LDS  R30,_cnt
0003c2 5fef      	SUBI R30,-LOW(1)
0003c3 93e0 03d4 	STS  _cnt,R30
                 ; 0000 0109 
                 ; 0000 010A             }
                 ; 0000 010B      }
                 _0xA3:
                 _0xA2:
                 _0x95:
                 _0x8E:
                 ; 0000 010C     }
                 ; 0000 010D 
                 ; 0000 010E      if(receive==ID())
                 _0x8B:
0003c5 df2f      	RCALL _ID
0003c6 91a0 03d2 	LDS  R26,_receive
0003c8 17ea      	CP   R30,R26
0003c9 f419      	BRNE _0xA4
                 ; 0000 010F 
                 ; 0000 0110      flag=1;
0003ca e0e1      	LDI  R30,LOW(1)
0003cb 93e0 03d5 	STS  _flag,R30
                 ; 0000 0111 
                 ; 0000 0112 
                 ; 0000 0113 }
                 _0xA4:
0003cd 91e9      	LD   R30,Y+
0003ce bfef      	OUT  SREG,R30
0003cf 91f9      	LD   R31,Y+
0003d0 91e9      	LD   R30,Y+
0003d1 91b9      	LD   R27,Y+
0003d2 91a9      	LD   R26,Y+
0003d3 9199      	LD   R25,Y+
0003d4 9189      	LD   R24,Y+
0003d5 9179      	LD   R23,Y+
0003d6 9169      	LD   R22,Y+
0003d7 90f9      	LD   R15,Y+
0003d8 9019      	LD   R1,Y+
0003d9 9009      	LD   R0,Y+
0003da 9518      	RETI
                 ; .FEND
                 ;
                 ;void WELL_COME(void)
                 ; 0000 0116 {
                 _WELL_COME:
                 ; .FSTART _WELL_COME
                 ; 0000 0117     char t=0,delay;
                 ; 0000 0118     if(ID()==1)       //for local one
0003db 931a      	ST   -Y,R17
0003dc 930a      	ST   -Y,R16
                 ;	t -> R17
                 ;	delay -> R16
0003dd e010      	LDI  R17,0
0003de df16      	RCALL _ID
0003df 30e1      	CPI  R30,LOW(0x1)
0003e0 f009      	BREQ PC+2
0003e1 c07a      	RJMP _0xA5
                 ; 0000 0119     {
                 ; 0000 011A         Display1=E;      //show E
0003e2 940e 066f 	CALL SUBOPT_0x5
                 ; 0000 011B     Display2=_empty;
                 ; 0000 011C     Display3=_empty;
                 ; 0000 011D     Display4=_empty;
                 ; 0000 011E 
                 ; 0000 011F     for(delay=0;delay<255;delay++)
                 _0xA7:
0003e4 3f0f      	CPI  R16,255
0003e5 f420      	BRSH _0xA8
                 ; 0000 0120     display(Display1,Display2,Display3,Display4);
0003e6 940e 067d 	CALL SUBOPT_0x6
0003e8 5f0f      	SUBI R16,-1
0003e9 cffa      	RJMP _0xA7
                 _0xA8:
                 ; 0000 0122 Display1=M;
0003ea 940e 0686 	CALL SUBOPT_0x7
                 ; 0000 0123     Display2=E;
                 ; 0000 0124     Display3=_empty;
                 ; 0000 0125     Display4=_empty;
                 ; 0000 0126 
                 ; 0000 0127     for(delay=0;delay<255;delay++)
                 _0xAA:
0003ec 3f0f      	CPI  R16,255
0003ed f420      	BRSH _0xAB
                 ; 0000 0128     display(Display1,Display2,Display3,Display4);
0003ee 940e 067d 	CALL SUBOPT_0x6
0003f0 5f0f      	SUBI R16,-1
0003f1 cffa      	RJMP _0xAA
                 _0xAB:
                 ; 0000 012A Display1=O;
0003f2 940e 0694 	CALL SUBOPT_0x8
                 ; 0000 012B     Display2=M;
                 ; 0000 012C     Display3=E;
                 ; 0000 012D     Display4=_empty;
                 ; 0000 012E 
                 ; 0000 012F     for(delay=0;delay<255;delay++)
                 _0xAD:
0003f4 3f0f      	CPI  R16,255
0003f5 f420      	BRSH _0xAE
                 ; 0000 0130     display(Display1,Display2,Display3,Display4);
0003f6 940e 067d 	CALL SUBOPT_0x6
0003f8 5f0f      	SUBI R16,-1
0003f9 cffa      	RJMP _0xAD
                 _0xAE:
                 ; 0000 0131 Display1=C;
0003fa 940e 06a2 	CALL SUBOPT_0x9
                 ; 0000 0132     Display2=O;
                 ; 0000 0133     Display3=M;
                 ; 0000 0134     Display4=E;
                 ; 0000 0135 
                 ; 0000 0136     for(delay=0;delay<255;delay++)
                 _0xB0:
0003fc 3f0f      	CPI  R16,255
0003fd f420      	BRSH _0xB1
                 ; 0000 0137     display(Display1,Display2,Display3,Display4);
0003fe 940e 067d 	CALL SUBOPT_0x6
000400 5f0f      	SUBI R16,-1
000401 cffa      	RJMP _0xB0
                 _0xB1:
                 ; 0000 0139 Display1=_empty;
000402 e6e0      	LDI  R30,LOW(__empty)
000403 e0f2      	LDI  R31,HIGH(__empty)
000404 940e 06b0 	CALL SUBOPT_0xA
                 ; 0000 013A     Display2=C;
                 ; 0000 013B     Display3=O;
                 ; 0000 013C     Display4=M;
                 ; 0000 013D 
                 ; 0000 013E     for(delay=0;delay<255;delay++)
                 _0xB3:
000406 3f0f      	CPI  R16,255
000407 f420      	BRSH _0xB4
                 ; 0000 013F     display(Display1,Display2,Display3,Display4);
000408 940e 067d 	CALL SUBOPT_0x6
00040a 5f0f      	SUBI R16,-1
00040b cffa      	RJMP _0xB3
                 _0xB4:
                 ; 0000 0140 Display1=L;
00040c e0e8      	LDI  R30,LOW(_L)
00040d e0f3      	LDI  R31,HIGH(_L)
00040e 940e 06bc 	CALL SUBOPT_0xB
                 ; 0000 0141     Display2=_empty;
                 ; 0000 0142     Display3=C;
000410 940e 06c1 	CALL SUBOPT_0xC
                 ; 0000 0143     Display4=O;
                 ; 0000 0144 
                 ; 0000 0145     for(delay=0;delay<255;delay++)
                 _0xB6:
000412 3f0f      	CPI  R16,255
000413 f420      	BRSH _0xB7
                 ; 0000 0146     display(Display1,Display2,Display3,Display4);
000414 940e 067d 	CALL SUBOPT_0x6
000416 5f0f      	SUBI R16,-1
000417 cffa      	RJMP _0xB6
                 _0xB7:
                 ; 0000 0147 Display1=E;
000418 940e 06c9 	CALL SUBOPT_0xD
                 ; 0000 0148     Display2=L;
                 ; 0000 0149     Display3=_empty;
00041a e6e0      	LDI  R30,LOW(__empty)
00041b e0f2      	LDI  R31,HIGH(__empty)
00041c 015f      	MOVW R10,R30
                 ; 0000 014A     Display4=C;
00041d ece0      	LDI  R30,LOW(_C)
00041e e0f2      	LDI  R31,HIGH(_C)
00041f 016f      	MOVW R12,R30
                 ; 0000 014B 
                 ; 0000 014C     for(delay=0;delay<255;delay++)
000420 e000      	LDI  R16,LOW(0)
                 _0xB9:
000421 3f0f      	CPI  R16,255
000422 f420      	BRSH _0xBA
                 ; 0000 014D     display(Display1,Display2,Display3,Display4);
000423 940e 067d 	CALL SUBOPT_0x6
000425 5f0f      	SUBI R16,-1
000426 cffa      	RJMP _0xB9
                 _0xBA:
                 ; 0000 014F Display1=W;
000427 940e 06d0 	CALL SUBOPT_0xE
                 ; 0000 0150     Display2=E;
                 ; 0000 0151     Display3=L;
                 ; 0000 0152     Display4=_empty;
000429 940e 06da 	CALL SUBOPT_0xF
                 ; 0000 0153     for(delay=0;delay<255;delay++)
                 _0xBC:
00042b 3f0f      	CPI  R16,255
00042c f420      	BRSH _0xBD
                 ; 0000 0154     display(Display1,Display2,Display3,Display4);
00042d 940e 067d 	CALL SUBOPT_0x6
00042f 5f0f      	SUBI R16,-1
000430 cffa      	RJMP _0xBC
                 _0xBD:
                 ; 0000 0155 Display1=_empty;
000431 940e 06df 	CALL SUBOPT_0x10
                 ; 0000 0156     Display2=W;                  //SHOW WEL
                 ; 0000 0157     Display3=E;
                 ; 0000 0158     Display4=L;
                 ; 0000 0159     for(delay=0;delay<255;delay++)
                 _0xBF:
000433 3f0f      	CPI  R16,255
000434 f420      	BRSH _0xC0
                 ; 0000 015A     display(Display1,Display2,Display3,Display4);
000435 940e 067d 	CALL SUBOPT_0x6
000437 5f0f      	SUBI R16,-1
000438 cffa      	RJMP _0xBF
                 _0xC0:
                 ; 0000 015B Display1=_empty;
000439 940e 06ed 	CALL SUBOPT_0x11
                 ; 0000 015C     Display2=_empty;
                 ; 0000 015D     Display3=W;
00043b 940e 06f0 	CALL SUBOPT_0x12
                 ; 0000 015E     Display4=E;
                 ; 0000 015F     for(delay=0;delay<255;delay++)
                 _0xC2:
00043d 3f0f      	CPI  R16,255
00043e f420      	BRSH _0xC3
                 ; 0000 0160     display(Display1,Display2,Display3,Display4);
00043f 940e 067d 	CALL SUBOPT_0x6
000441 5f0f      	SUBI R16,-1
000442 cffa      	RJMP _0xC2
                 _0xC3:
                 ; 0000 0161 Display1=_empty;
000443 940e 06ed 	CALL SUBOPT_0x11
                 ; 0000 0162     Display2=_empty;                 //SHOW W
                 ; 0000 0163     Display3=_empty;
000445 940e 06f8 	CALL SUBOPT_0x13
                 ; 0000 0164     Display4=W;
                 ; 0000 0165     for(delay=0;delay<255;delay++)
                 _0xC5:
000447 3f0f      	CPI  R16,255
000448 f420      	BRSH _0xC6
                 ; 0000 0166     display(Display1,Display2,Display3,Display4);
000449 940e 067d 	CALL SUBOPT_0x6
00044b 5f0f      	SUBI R16,-1
00044c cffa      	RJMP _0xC5
                 _0xC6:
                 ; 0000 0167 Display1=_empty;
00044d 940e 06ed 	CALL SUBOPT_0x11
                 ; 0000 0168         Display2=_empty;
                 ; 0000 0169         Display3=_empty;
00044f 940e 0700 	CALL SUBOPT_0x14
                 ; 0000 016A         Display4=_empty;
                 ; 0000 016B         for(t=0;t<=4;t++)
                 _0xC8:
000451 3015      	CPI  R17,5
000452 f448      	BRSH _0xC9
                 ; 0000 016C              for(delay=0;delay<255;delay++)
000453 e000      	LDI  R16,LOW(0)
                 _0xCB:
000454 3f0f      	CPI  R16,255
000455 f420      	BRSH _0xCC
                 ; 0000 016D      display(Display1,Display2,Display3,Display4);
000456 940e 067d 	CALL SUBOPT_0x6
000458 5f0f      	SUBI R16,-1
000459 cffa      	RJMP _0xCB
                 _0xCC:
                 ; 0000 016E }
00045a 5f1f      	SUBI R17,-1
00045b cff5      	RJMP _0xC8
                 _0xC9:
                 ; 0000 016F          if(ID()==2)
                 _0xA5:
00045c de98      	RCALL _ID
00045d 30e2      	CPI  R30,LOW(0x2)
00045e f009      	BREQ PC+2
00045f c08b      	RJMP _0xCD
                 ; 0000 0170     {
                 ; 0000 0171 
                 ; 0000 0172         Display1=_empty;
000460 940e 06ed 	CALL SUBOPT_0x11
                 ; 0000 0173         Display2=_empty;
                 ; 0000 0174         Display3=_empty;
000462 940e 0700 	CALL SUBOPT_0x14
                 ; 0000 0175         Display4=_empty;
                 ; 0000 0176         for(t=0;t<4;t++)
                 _0xCF:
000464 3014      	CPI  R17,4
000465 f448      	BRSH _0xD0
                 ; 0000 0177     for(delay=0;delay<255;delay++)
000466 e000      	LDI  R16,LOW(0)
                 _0xD2:
000467 3f0f      	CPI  R16,255
000468 f420      	BRSH _0xD3
                 ; 0000 0178      display(Display1,Display2,Display3,Display4);
000469 940e 067d 	CALL SUBOPT_0x6
00046b 5f0f      	SUBI R16,-1
00046c cffa      	RJMP _0xD2
                 _0xD3:
                 ; 0000 0179 Display1=E;
00046d 5f1f      	SUBI R17,-1
00046e cff5      	RJMP _0xCF
                 _0xD0:
00046f 940e 066f 	CALL SUBOPT_0x5
                 ; 0000 017A     Display2=_empty;
                 ; 0000 017B     Display3=_empty;
                 ; 0000 017C     Display4=_empty;
                 ; 0000 017D 
                 ; 0000 017E     for(delay=0;delay<255;delay++)
                 _0xD5:
000471 3f0f      	CPI  R16,255
000472 f420      	BRSH _0xD6
                 ; 0000 017F     display(Display1,Display2,Display3,Display4);
000473 940e 067d 	CALL SUBOPT_0x6
000475 5f0f      	SUBI R16,-1
000476 cffa      	RJMP _0xD5
                 _0xD6:
                 ; 0000 0181 Display1=M;
000477 940e 0686 	CALL SUBOPT_0x7
                 ; 0000 0182     Display2=E;
                 ; 0000 0183     Display3=_empty;
                 ; 0000 0184     Display4=_empty;
                 ; 0000 0185 
                 ; 0000 0186     for(delay=0;delay<255;delay++)
                 _0xD8:
000479 3f0f      	CPI  R16,255
00047a f420      	BRSH _0xD9
                 ; 0000 0187     display(Display1,Display2,Display3,Display4);
00047b 940e 067d 	CALL SUBOPT_0x6
00047d 5f0f      	SUBI R16,-1
00047e cffa      	RJMP _0xD8
                 _0xD9:
                 ; 0000 0189 Display1=O;
00047f 940e 0694 	CALL SUBOPT_0x8
                 ; 0000 018A     Display2=M;
                 ; 0000 018B     Display3=E;
                 ; 0000 018C     Display4=_empty;
                 ; 0000 018D 
                 ; 0000 018E     for(delay=0;delay<255;delay++)
                 _0xDB:
000481 3f0f      	CPI  R16,255
000482 f420      	BRSH _0xDC
                 ; 0000 018F     display(Display1,Display2,Display3,Display4);
000483 940e 067d 	CALL SUBOPT_0x6
000485 5f0f      	SUBI R16,-1
000486 cffa      	RJMP _0xDB
                 _0xDC:
                 ; 0000 0190 Display1=C;
000487 940e 06a2 	CALL SUBOPT_0x9
                 ; 0000 0191     Display2=O;
                 ; 0000 0192     Display3=M;
                 ; 0000 0193     Display4=E;
                 ; 0000 0194 
                 ; 0000 0195     for(delay=0;delay<255;delay++)
                 _0xDE:
000489 3f0f      	CPI  R16,255
00048a f420      	BRSH _0xDF
                 ; 0000 0196     display(Display1,Display2,Display3,Display4);
00048b 940e 067d 	CALL SUBOPT_0x6
00048d 5f0f      	SUBI R16,-1
00048e cffa      	RJMP _0xDE
                 _0xDF:
                 ; 0000 0198 Display1=L;
00048f e0e8      	LDI  R30,LOW(_L)
000490 e0f3      	LDI  R31,HIGH(_L)
000491 940e 06b0 	CALL SUBOPT_0xA
                 ; 0000 0199     Display2=C;
                 ; 0000 019A     Display3=O;
                 ; 0000 019B     Display4=M;
                 ; 0000 019C 
                 ; 0000 019D     for(delay=0;delay<255;delay++)
                 _0xE1:
000493 3f0f      	CPI  R16,255
000494 f420      	BRSH _0xE2
                 ; 0000 019E     display(Display1,Display2,Display3,Display4);
000495 940e 067d 	CALL SUBOPT_0x6
000497 5f0f      	SUBI R16,-1
000498 cffa      	RJMP _0xE1
                 _0xE2:
                 ; 0000 019F Display1=L;
000499 e0e8      	LDI  R30,LOW(_L)
00049a e0f3      	LDI  R31,HIGH(_L)
00049b 013f      	MOVW R6,R30
                 ; 0000 01A0     Display2=L;
00049c e0e8      	LDI  R30,LOW(_L)
00049d e0f3      	LDI  R31,HIGH(_L)
00049e 014f      	MOVW R8,R30
                 ; 0000 01A1     Display3=C;
00049f 940e 06c1 	CALL SUBOPT_0xC
                 ; 0000 01A2     Display4=O;
                 ; 0000 01A3 
                 ; 0000 01A4     for(delay=0;delay<255;delay++)
                 _0xE4:
0004a1 3f0f      	CPI  R16,255
0004a2 f420      	BRSH _0xE5
                 ; 0000 01A5     display(Display1,Display2,Display3,Display4);
0004a3 940e 067d 	CALL SUBOPT_0x6
0004a5 5f0f      	SUBI R16,-1
0004a6 cffa      	RJMP _0xE4
                 _0xE5:
                 ; 0000 01A6 Display1=E;
0004a7 940e 06c9 	CALL SUBOPT_0xD
                 ; 0000 01A7     Display2=L;
                 ; 0000 01A8     Display3=L;
0004a9 e0e8      	LDI  R30,LOW(_L)
0004aa e0f3      	LDI  R31,HIGH(_L)
0004ab 015f      	MOVW R10,R30
                 ; 0000 01A9     Display4=C;
0004ac ece0      	LDI  R30,LOW(_C)
0004ad e0f2      	LDI  R31,HIGH(_C)
0004ae 016f      	MOVW R12,R30
                 ; 0000 01AA 
                 ; 0000 01AB     for(delay=0;delay<255;delay++)
0004af e000      	LDI  R16,LOW(0)
                 _0xE7:
0004b0 3f0f      	CPI  R16,255
0004b1 f420      	BRSH _0xE8
                 ; 0000 01AC     display(Display1,Display2,Display3,Display4);
0004b2 940e 067d 	CALL SUBOPT_0x6
0004b4 5f0f      	SUBI R16,-1
0004b5 cffa      	RJMP _0xE7
                 _0xE8:
                 ; 0000 01AE Display1=W;
0004b6 940e 06d0 	CALL SUBOPT_0xE
                 ; 0000 01AF     Display2=E;
                 ; 0000 01B0     Display3=L;
                 ; 0000 01B1     Display4=L;
0004b8 e0e8      	LDI  R30,LOW(_L)
0004b9 e0f3      	LDI  R31,HIGH(_L)
0004ba 016f      	MOVW R12,R30
                 ; 0000 01B2     for(delay=0;delay<255;delay++)
0004bb e000      	LDI  R16,LOW(0)
                 _0xEA:
0004bc 3f0f      	CPI  R16,255
0004bd f420      	BRSH _0xEB
                 ; 0000 01B3     display(Display1,Display2,Display3,Display4);
0004be 940e 067d 	CALL SUBOPT_0x6
0004c0 5f0f      	SUBI R16,-1
0004c1 cffa      	RJMP _0xEA
                 _0xEB:
                 ; 0000 01B4 Display1=_empty;
0004c2 940e 06df 	CALL SUBOPT_0x10
                 ; 0000 01B5     Display2=W;
                 ; 0000 01B6     Display3=E;
                 ; 0000 01B7     Display4=L;
                 ; 0000 01B8     for(delay=0;delay<255;delay++)
                 _0xED:
0004c4 3f0f      	CPI  R16,255
0004c5 f420      	BRSH _0xEE
                 ; 0000 01B9     display(Display1,Display2,Display3,Display4);
0004c6 940e 067d 	CALL SUBOPT_0x6
0004c8 5f0f      	SUBI R16,-1
0004c9 cffa      	RJMP _0xED
                 _0xEE:
                 ; 0000 01BA Display1=_empty;
0004ca 940e 06ed 	CALL SUBOPT_0x11
                 ; 0000 01BB     Display2=_empty;
                 ; 0000 01BC     Display3=W;
0004cc 940e 06f0 	CALL SUBOPT_0x12
                 ; 0000 01BD     Display4=E;
                 ; 0000 01BE     for(delay=0;delay<255;delay++)
                 _0xF0:
0004ce 3f0f      	CPI  R16,255
0004cf f420      	BRSH _0xF1
                 ; 0000 01BF     display(Display1,Display2,Display3,Display4);
0004d0 940e 067d 	CALL SUBOPT_0x6
0004d2 5f0f      	SUBI R16,-1
0004d3 cffa      	RJMP _0xF0
                 _0xF1:
                 ; 0000 01C0 Display1=_empty;
0004d4 940e 06ed 	CALL SUBOPT_0x11
                 ; 0000 01C1     Display2=_empty;
                 ; 0000 01C2     Display3=_empty;
0004d6 940e 06f8 	CALL SUBOPT_0x13
                 ; 0000 01C3     Display4=W;
                 ; 0000 01C4     for(delay=0;delay<255;delay++)
                 _0xF3:
0004d8 3f0f      	CPI  R16,255
0004d9 f420      	BRSH _0xF4
                 ; 0000 01C5     display(Display1,Display2,Display3,Display4);
0004da 940e 067d 	CALL SUBOPT_0x6
0004dc 5f0f      	SUBI R16,-1
0004dd cffa      	RJMP _0xF3
                 _0xF4:
                 ; 0000 01C6 Display1=_empty;
0004de 940e 06ed 	CALL SUBOPT_0x11
                 ; 0000 01C7         Display2=_empty;
                 ; 0000 01C8         Display3=_empty;
0004e0 e6e0      	LDI  R30,LOW(__empty)
0004e1 e0f2      	LDI  R31,HIGH(__empty)
0004e2 015f      	MOVW R10,R30
                 ; 0000 01C9         Display4=_empty;
0004e3 940e 06da 	CALL SUBOPT_0xF
                 ; 0000 01CA          for(delay=0;delay<255;delay++)
                 _0xF6:
0004e5 3f0f      	CPI  R16,255
0004e6 f420      	BRSH _0xF7
                 ; 0000 01CB     display(Display1,Display2,Display3,Display4);
0004e7 940e 067d 	CALL SUBOPT_0x6
0004e9 5f0f      	SUBI R16,-1
0004ea cffa      	RJMP _0xF6
                 _0xF7:
                 ; 0000 01CC }
                 ; 0000 01CD 
                 ; 0000 01CE 
                 ; 0000 01CF }
                 _0xCD:
0004eb 9109      	LD   R16,Y+
0004ec 9119      	LD   R17,Y+
0004ed 9508      	RET
                 ; .FEND
                 ;
                 ;
                 ;
                 ;void main(void)
                 ; 0000 01D4 {
                 _main:
                 ; .FSTART _main
                 ; 0000 01D5   char delay=0,t,well_come_massage=1;
                 ; 0000 01D6 
                 ; 0000 01D7     char le;
                 ; 0000 01D8     unsigned int data_ln=0;
                 ; 0000 01D9     DDRC=0xFF;
                 ;	delay -> R17
                 ;	t -> R16
                 ;	well_come_massage -> R19
                 ;	le -> R18
                 ;	data_ln -> R20,R21
0004ee e010      	LDI  R17,0
0004ef e031      	LDI  R19,1
                +
0004f0 e040     +LDI R20 , LOW ( 0 )
0004f1 e050     +LDI R21 , HIGH ( 0 )
                 	__GETWRN 20,21,0
0004f2 efef      	LDI  R30,LOW(255)
0004f3 bbe4      	OUT  0x14,R30
                 ; 0000 01DA     DDRA=0xFF;
0004f4 bbea      	OUT  0x1A,R30
                 ; 0000 01DB     DDRB=0XF0;
0004f5 efe0      	LDI  R30,LOW(240)
0004f6 bbe7      	OUT  0x17,R30
                 ; 0000 01DC // USART initialization
                 ; 0000 01DD // Communication Parameters: 8 Data, 1 Stop, No Parity
                 ; 0000 01DE // USART Receiver: On
                 ; 0000 01DF // USART Transmitter: Off
                 ; 0000 01E0 // USART Mode: Asynchronous
                 ; 0000 01E1 // USART Baud Rate: 9600
                 ; 0000 01E2 UCSRA=(0<<RXC) | (0<<TXC) | (0<<UDRE) | (0<<FE) | (0<<DOR) | (0<<UPE) | (0<<U2X) | (0<<MPCM);
0004f7 e0e0      	LDI  R30,LOW(0)
0004f8 b9eb      	OUT  0xB,R30
                 ; 0000 01E3 UCSRB=(1<<RXCIE) | (0<<TXCIE) | (0<<UDRIE) | (1<<RXEN) | (0<<TXEN) | (0<<UCSZ2) | (0<<RXB8) | (0<<TXB8);
0004f9 e9e0      	LDI  R30,LOW(144)
0004fa b9ea      	OUT  0xA,R30
                 ; 0000 01E4 UCSRC=(1<<URSEL) | (0<<UMSEL) | (0<<UPM1) | (0<<UPM0) | (0<<USBS) | (1<<UCSZ1) | (1<<UCSZ0) | (0<<UCPOL);
0004fb e8e6      	LDI  R30,LOW(134)
0004fc bde0      	OUT  0x20,R30
                 ; 0000 01E5 UBRRH=0x00;
0004fd e0e0      	LDI  R30,LOW(0)
0004fe bde0      	OUT  0x20,R30
                 ; 0000 01E6 UBRRL=0x33;
0004ff e3e3      	LDI  R30,LOW(51)
000500 b9e9      	OUT  0x9,R30
                 ; 0000 01E7 // Global enable interrupts
                 ; 0000 01E8 #asm("sei")
000501 9478      	sei
                 ; 0000 01E9     while (1)
                 _0xF8:
                 ; 0000 01EA     {
                 ; 0000 01EB 
                 ; 0000 01EC 
                 ; 0000 01ED       if(done==1)
000502 91a0 05da 	LDS  R26,_done
000504 30a1      	CPI  R26,LOW(0x1)
000505 f009      	BREQ PC+2
000506 c104      	RJMP _0xFB
                 ; 0000 01EE       {
                 ; 0000 01EF       well_come_massage=0;
000507 e030      	LDI  R19,LOW(0)
                 ; 0000 01F0       Display1=_empty;
000508 940e 06ed 	CALL SUBOPT_0x11
                 ; 0000 01F1         Display2=_empty;
                 ; 0000 01F2         Display3=_empty;
00050a e6e0      	LDI  R30,LOW(__empty)
00050b e0f2      	LDI  R31,HIGH(__empty)
00050c 015f      	MOVW R10,R30
                 ; 0000 01F3         Display4=_empty;
00050d 940e 06da 	CALL SUBOPT_0xF
                 ; 0000 01F4       for(t=0;t<255;t++)
                 _0xFD:
00050f 3f0f      	CPI  R16,255
000510 f448      	BRSH _0xFE
                 ; 0000 01F5       {
                 ; 0000 01F6        if(show[t]==0x00)
000511 2fe0      	MOV  R30,R16
000512 e0f0      	LDI  R31,0
000513 52e6      	SUBI R30,LOW(-_show)
000514 4ffc      	SBCI R31,HIGH(-_show)
000515 81e0      	LD   R30,Z
000516 30e0      	CPI  R30,0
000517 f011      	BREQ _0xFE
                 ; 0000 01F7        break;
                 ; 0000 01F8       }
000518 5f0f      	SUBI R16,-1
000519 cff5      	RJMP _0xFD
                 _0xFE:
                 ; 0000 01F9 
                 ; 0000 01FA       data_ln =t;
00051a 2f40      	MOV  R20,R16
00051b 2755      	CLR  R21
                 ; 0000 01FB       rr[1]=data_ln;
                +
00051c 9340 05e0+STS _rr + ( 1 ) , R20
                 	__PUTBMRN _rr,1,20
                 ; 0000 01FC       if(data_ln>4)
                +
00051e 3045     +CPI R20 , LOW ( 5 )
00051f e0e0     +LDI R30 , HIGH ( 5 )
000520 075e     +CPC R21 , R30
                 	__CPWRN 20,21,5
000521 f408      	BRSH PC+2
000522 c04f      	RJMP _0x100
                 ; 0000 01FD      {
                 ; 0000 01FE      data_ln=data_ln/4;
000523 01fa      	MOVW R30,R20
000524 940e 0747 	CALL __LSRW2
000526 01af      	MOVW R20,R30
                 ; 0000 01FF        for(le=0;le<data_ln;le++)
000527 e020      	LDI  R18,LOW(0)
                 _0x102:
000528 01fa      	MOVW R30,R20
000529 2fa2      	MOV  R26,R18
00052a e0b0      	LDI  R27,0
00052b 17ae      	CP   R26,R30
00052c 07bf      	CPC  R27,R31
00052d f598      	BRSH _0x103
                 ; 0000 0200        {
                 ; 0000 0201         Search_dis(show,(le*4));
00052e 940e 065e 	CALL SUBOPT_0x2
000530 2fe2      	MOV  R30,R18
000531 0fee      	LSL  R30
000532 0fee      	LSL  R30
000533 2fae      	MOV  R26,R30
000534 940e 0708 	CALL SUBOPT_0x15
                 ; 0000 0202         Display1=Rx_Display;
                 ; 0000 0203         Rx_Display=0;
                 ; 0000 0204         Search_dis(show,(le*4)+1);
000536 2fe2      	MOV  R30,R18
000537 0fee      	LSL  R30
000538 0fee      	LSL  R30
000539 5fef      	SUBI R30,-LOW(1)
00053a 2fae      	MOV  R26,R30
00053b 940e 070e 	CALL SUBOPT_0x16
                 ; 0000 0205         Display2=Rx_Display;
                 ; 0000 0206         Rx_Display=0;
                 ; 0000 0207         Search_dis(show,(le*4)+2);
00053d 2fe2      	MOV  R30,R18
00053e 0fee      	LSL  R30
00053f 0fee      	LSL  R30
000540 5fee      	SUBI R30,-LOW(2)
000541 2fae      	MOV  R26,R30
000542 940e 0714 	CALL SUBOPT_0x17
                 ; 0000 0208         Display3=Rx_Display;
                 ; 0000 0209         Rx_Display=0;
                 ; 0000 020A         Search_dis(show,(le*4)+3);
000544 940e 065e 	CALL SUBOPT_0x2
000546 2fe2      	MOV  R30,R18
000547 0fee      	LSL  R30
000548 0fee      	LSL  R30
000549 5fed      	SUBI R30,-LOW(3)
00054a 2fae      	MOV  R26,R30
00054b dc5f      	RCALL _Search_dis
                 ; 0000 020B         Display4=Rx_Display;
00054c 0162      	MOVW R12,R4
                 ; 0000 020C         Rx_Display=0;
00054d 2444      	CLR  R4
00054e 2455      	CLR  R5
                 ; 0000 020D          for(t=0;t<5;t++)
00054f e000      	LDI  R16,LOW(0)
                 _0x105:
000550 3005      	CPI  R16,5
000551 f448      	BRSH _0x106
                 ; 0000 020E         for(delay=0;delay<255;delay++)
000552 e010      	LDI  R17,LOW(0)
                 _0x108:
000553 3f1f      	CPI  R17,255
000554 f420      	BRSH _0x109
                 ; 0000 020F         display(Display1,Display2,Display3,Display4);
000555 940e 067d 	CALL SUBOPT_0x6
000557 5f1f      	SUBI R17,-1
000558 cffa      	RJMP _0x108
                 _0x109:
                 ; 0000 0210 Display1=_empty;
000559 5f0f      	SUBI R16,-1
00055a cff5      	RJMP _0x105
                 _0x106:
00055b 940e 06ed 	CALL SUBOPT_0x11
                 ; 0000 0211         Display2=_empty;
                 ; 0000 0212         Display3=_empty;
00055d 940e 071a 	CALL SUBOPT_0x18
                 ; 0000 0213         Display4=_empty;
                 ; 0000 0214 
                 ; 0000 0215       }
00055f 5f2f      	SUBI R18,-1
000560 cfc7      	RJMP _0x102
                 _0x103:
                 ; 0000 0216       mul=data_ln*4;
000561 2fe4      	MOV  R30,R20
000562 0fee      	LSL  R30
000563 0fee      	LSL  R30
000564 93e0 03d1 	STS  _mul,R30
                 ; 0000 0217       rr[0]=mul;
000566 93e0 05df 	STS  _rr,R30
                 ; 0000 0218 
                 ; 0000 0219       data_ln=rr[1]-rr[0];
                +
000568 91a0 05e0+LDS R26 , _rr + ( 1 )
                 	__GETB2MN _rr,1
00056a 27bb      	CLR  R27
00056b e0f0      	LDI  R31,0
00056c 1bae      	SUB  R26,R30
00056d 0bbf      	SBC  R27,R31
00056e 01ad      	MOVW R20,R26
                 ; 0000 021A 
                 ; 0000 021B       contin=1;
00056f e0e1      	LDI  R30,LOW(1)
000570 93e0 03d0 	STS  _contin,R30
                 ; 0000 021C       }
                 ; 0000 021D         if(contin==1)
                 _0x100:
000572 91a0 03d0 	LDS  R26,_contin
000574 30a1      	CPI  R26,LOW(0x1)
000575 f5e9      	BRNE _0x10A
                 ; 0000 021E         {
                 ; 0000 021F 
                 ; 0000 0220             if(data_ln==3)
000576 e0e3      	LDI  R30,LOW(3)
000577 e0f0      	LDI  R31,HIGH(3)
000578 17e4      	CP   R30,R20
000579 07f5      	CPC  R31,R21
00057a f481      	BRNE _0x10B
                 ; 0000 0221             {
                 ; 0000 0222                 Search_dis(show,mul);
00057b 940e 065e 	CALL SUBOPT_0x2
00057d 91a0 03d1 	LDS  R26,_mul
00057f 940e 0708 	CALL SUBOPT_0x15
                 ; 0000 0223                 Display1=Rx_Display;
                 ; 0000 0224                 Rx_Display=0;
                 ; 0000 0225                 Search_dis(show,mul+1);
000581 91a0 03d1 	LDS  R26,_mul
000583 5faf      	SUBI R26,-LOW(1)
000584 940e 070e 	CALL SUBOPT_0x16
                 ; 0000 0226                 Display2=Rx_Display;
                 ; 0000 0227                 Rx_Display=0;
                 ; 0000 0228                 Search_dis(show,mul+2);
000586 91a0 03d1 	LDS  R26,_mul
000588 5fae      	SUBI R26,-LOW(2)
000589 940e 0714 	CALL SUBOPT_0x17
                 ; 0000 0229                 Display3=Rx_Display;
                 ; 0000 022A                 Rx_Display=0;
                 ; 0000 022B 
                 ; 0000 022C             }
                 ; 0000 022D             if(data_ln==2)
                 _0x10B:
00058b e0e2      	LDI  R30,LOW(2)
00058c e0f0      	LDI  R31,HIGH(2)
00058d 17e4      	CP   R30,R20
00058e 07f5      	CPC  R31,R21
00058f f459      	BRNE _0x10C
                 ; 0000 022E             {
                 ; 0000 022F                 Search_dis(show,mul);
000590 940e 065e 	CALL SUBOPT_0x2
000592 91a0 03d1 	LDS  R26,_mul
000594 940e 0708 	CALL SUBOPT_0x15
                 ; 0000 0230                 Display1=Rx_Display;
                 ; 0000 0231                 Rx_Display=0;
                 ; 0000 0232                 Search_dis(show,mul+1);
000596 91a0 03d1 	LDS  R26,_mul
000598 5faf      	SUBI R26,-LOW(1)
000599 940e 0721 	CALL SUBOPT_0x19
                 ; 0000 0233                 Display2=Rx_Display;
                 ; 0000 0234                 Rx_Display=0;
                 ; 0000 0235                 Display3=_empty;
                 ; 0000 0236                 Display4=_empty;
                 ; 0000 0237 
                 ; 0000 0238             }
                 ; 0000 0239             if(data_ln==1)
                 _0x10C:
00059b e0e1      	LDI  R30,LOW(1)
00059c e0f0      	LDI  R31,HIGH(1)
00059d 17e4      	CP   R30,R20
00059e 07f5      	CPC  R31,R21
00059f f431      	BRNE _0x10D
                 ; 0000 023A             {
                 ; 0000 023B 
                 ; 0000 023C                 Search_dis(show,mul);
0005a0 940e 065e 	CALL SUBOPT_0x2
0005a2 91a0 03d1 	LDS  R26,_mul
0005a4 940e 0727 	CALL SUBOPT_0x1A
                 ; 0000 023D                 Display1=Rx_Display;
                 ; 0000 023E                 Rx_Display=0;
                 ; 0000 023F                 Display2=_empty;
                 ; 0000 0240                 Display3=_empty;
                 ; 0000 0241                 Display4=_empty;
                 ; 0000 0242 
                 ; 0000 0243             }
                 ; 0000 0244               for(t=0;t<5;t++)
                 _0x10D:
0005a6 e000      	LDI  R16,LOW(0)
                 _0x10F:
0005a7 3005      	CPI  R16,5
0005a8 f448      	BRSH _0x110
                 ; 0000 0245           for(delay=0;delay<255;delay++)
0005a9 e010      	LDI  R17,LOW(0)
                 _0x112:
0005aa 3f1f      	CPI  R17,255
0005ab f420      	BRSH _0x113
                 ; 0000 0246      display(Display1,Display2,Display3,Display4) ;
0005ac 940e 067d 	CALL SUBOPT_0x6
0005ae 5f1f      	SUBI R17,-1
0005af cffa      	RJMP _0x112
                 _0x113:
                 ; 0000 024A }
0005b0 5f0f      	SUBI R16,-1
0005b1 cff5      	RJMP _0x10F
                 _0x110:
                 ; 0000 024B       else if(contin==0)
0005b2 c057      	RJMP _0x114
                 _0x10A:
0005b3 91e0 03d0 	LDS  R30,_contin
0005b5 30e0      	CPI  R30,0
0005b6 f009      	BREQ PC+2
0005b7 c052      	RJMP _0x115
                 ; 0000 024C       {
                 ; 0000 024D              if(data_ln==4)
0005b8 e0e4      	LDI  R30,LOW(4)
0005b9 e0f0      	LDI  R31,HIGH(4)
0005ba 17e4      	CP   R30,R20
0005bb 07f5      	CPC  R31,R21
0005bc f4b1      	BRNE _0x116
                 ; 0000 024E             {
                 ; 0000 024F             Display1=_empty;
0005bd 940e 06ed 	CALL SUBOPT_0x11
                 ; 0000 0250                 Display2=_empty;
                 ; 0000 0251                 Display3=_empty;
0005bf 940e 071a 	CALL SUBOPT_0x18
                 ; 0000 0252                 Display4=_empty;
                 ; 0000 0253                 Search_dis(show,0);
0005c1 940e 065e 	CALL SUBOPT_0x2
0005c3 e0a0      	LDI  R26,LOW(0)
0005c4 940e 0708 	CALL SUBOPT_0x15
                 ; 0000 0254                 Display1=Rx_Display;
                 ; 0000 0255                 Rx_Display=0;
                 ; 0000 0256                 Search_dis(show,1);
0005c6 e0a1      	LDI  R26,LOW(1)
0005c7 940e 070e 	CALL SUBOPT_0x16
                 ; 0000 0257                 Display2=Rx_Display;
                 ; 0000 0258                 Rx_Display=0;
                 ; 0000 0259                 Search_dis(show,2);
0005c9 e0a2      	LDI  R26,LOW(2)
0005ca 940e 0714 	CALL SUBOPT_0x17
                 ; 0000 025A                 Display3=Rx_Display;
                 ; 0000 025B                  Rx_Display=0;
                 ; 0000 025C                  Search_dis(show,3);
0005cc 940e 065e 	CALL SUBOPT_0x2
0005ce e0a3      	LDI  R26,LOW(3)
0005cf dbdb      	RCALL _Search_dis
                 ; 0000 025D                 Display4=Rx_Display;
0005d0 0162      	MOVW R12,R4
                 ; 0000 025E                  Rx_Display=0;
0005d1 2444      	CLR  R4
0005d2 2455      	CLR  R5
                 ; 0000 025F 
                 ; 0000 0260             }
                 ; 0000 0261 
                 ; 0000 0262             if(data_ln==3)
                 _0x116:
0005d3 e0e3      	LDI  R30,LOW(3)
0005d4 e0f0      	LDI  R31,HIGH(3)
0005d5 17e4      	CP   R30,R20
0005d6 07f5      	CPC  R31,R21
0005d7 f479      	BRNE _0x117
                 ; 0000 0263             {
                 ; 0000 0264             Display1=_empty;
0005d8 940e 06ed 	CALL SUBOPT_0x11
                 ; 0000 0265                 Display2=_empty;
                 ; 0000 0266                 Display3=_empty;
0005da 940e 071a 	CALL SUBOPT_0x18
                 ; 0000 0267                 Display4=_empty;
                 ; 0000 0268                 Search_dis(show,0);
0005dc 940e 065e 	CALL SUBOPT_0x2
0005de e0a0      	LDI  R26,LOW(0)
0005df 940e 0708 	CALL SUBOPT_0x15
                 ; 0000 0269                 Display1=Rx_Display;
                 ; 0000 026A                 Rx_Display=0;
                 ; 0000 026B                 Search_dis(show,1);
0005e1 e0a1      	LDI  R26,LOW(1)
0005e2 940e 070e 	CALL SUBOPT_0x16
                 ; 0000 026C                 Display2=Rx_Display;
                 ; 0000 026D                 Rx_Display=0;
                 ; 0000 026E                 Search_dis(show,2);
0005e4 e0a2      	LDI  R26,LOW(2)
0005e5 940e 0714 	CALL SUBOPT_0x17
                 ; 0000 026F                 Display3=Rx_Display;
                 ; 0000 0270                  Rx_Display=0;
                 ; 0000 0271 
                 ; 0000 0272             }
                 ; 0000 0273             if(data_ln==2)
                 _0x117:
0005e7 e0e2      	LDI  R30,LOW(2)
0005e8 e0f0      	LDI  R31,HIGH(2)
0005e9 17e4      	CP   R30,R20
0005ea 07f5      	CPC  R31,R21
0005eb f441      	BRNE _0x118
                 ; 0000 0274             {
                 ; 0000 0275 
                 ; 0000 0276 
                 ; 0000 0277                 Search_dis(show,0);
0005ec 940e 065e 	CALL SUBOPT_0x2
0005ee e0a0      	LDI  R26,LOW(0)
0005ef 940e 0708 	CALL SUBOPT_0x15
                 ; 0000 0278                 Display1=Rx_Display;
                 ; 0000 0279                 Rx_Display=0;
                 ; 0000 027A                 Search_dis(show,1);
0005f1 e0a1      	LDI  R26,LOW(1)
0005f2 940e 0721 	CALL SUBOPT_0x19
                 ; 0000 027B                 Display2=Rx_Display;
                 ; 0000 027C                 Rx_Display=0;
                 ; 0000 027D                 Display3=_empty;
                 ; 0000 027E                 Display4=_empty;
                 ; 0000 027F 
                 ; 0000 0280             }
                 ; 0000 0281             if(data_ln==1)
                 _0x118:
0005f4 e0e1      	LDI  R30,LOW(1)
0005f5 e0f0      	LDI  R31,HIGH(1)
0005f6 17e4      	CP   R30,R20
0005f7 07f5      	CPC  R31,R21
0005f8 f429      	BRNE _0x119
                 ; 0000 0282             {
                 ; 0000 0283 
                 ; 0000 0284                 Search_dis(show,0);
0005f9 940e 065e 	CALL SUBOPT_0x2
0005fb e0a0      	LDI  R26,LOW(0)
0005fc 940e 0727 	CALL SUBOPT_0x1A
                 ; 0000 0285                 Display1=Rx_Display;
                 ; 0000 0286                 Rx_Display=0;
                 ; 0000 0287                 Display2=_empty;
                 ; 0000 0288                 Display3=_empty;
                 ; 0000 0289                 Display4=_empty;
                 ; 0000 028A 
                 ; 0000 028B             }
                 ; 0000 028C               for(t=0;t<5;t++)
                 _0x119:
0005fe e000      	LDI  R16,LOW(0)
                 _0x11B:
0005ff 3005      	CPI  R16,5
000600 f448      	BRSH _0x11C
                 ; 0000 028D           for(delay=0;delay<255;delay++)
000601 e010      	LDI  R17,LOW(0)
                 _0x11E:
000602 3f1f      	CPI  R17,255
000603 f420      	BRSH _0x11F
                 ; 0000 028E      display(Display1,Display2,Display3,Display4) ;
000604 940e 067d 	CALL SUBOPT_0x6
000606 5f1f      	SUBI R17,-1
000607 cffa      	RJMP _0x11E
                 _0x11F:
                 ; 0000 0290 }
000608 5f0f      	SUBI R16,-1
000609 cff5      	RJMP _0x11B
                 _0x11C:
                 ; 0000 0291       }
                 _0x115:
                 _0x114:
                 ; 0000 0292       else
00060a c003      	RJMP _0x120
                 _0xFB:
                 ; 0000 0293       if(well_come_massage==1)
00060b 3031      	CPI  R19,1
00060c f409      	BRNE _0x121
                 ; 0000 0294       {
                 ; 0000 0295       WELL_COME();
00060d ddcd      	RCALL _WELL_COME
                 ; 0000 0296 
                 ; 0000 0297                 }
                 ; 0000 0298 
                 ; 0000 0299 
                 ; 0000 029A       }
                 _0x121:
                 _0x120:
00060e cef3      	RJMP _0xF8
                 ; 0000 029B 
                 ; 0000 029C      }
                 _0x122:
00060f cfff      	RJMP _0x122
                 ; .FEND
                 ;
                 ;
                 ;
                 ;
                 ;#include <display.h>
                 ;#include <io.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 ;#include <delay.h>
                 ;#define up      1
                 ;#define down    0
                 ;
                 ;
                 ;flash char Activator[16]={1,2,3,4,5,6,7,8,9,10,11,12,13,14,15};
                 ;
                 ;void display(char *MAT1,char *MAT2,char *MAT3,char *MAT4)
                 ; 0001 000B {
                 
                 	.CSEG
                 _display:
                 ; .FSTART _display
                 ; 0001 000C    char i=0;
                 ; 0001 000D 
                 ; 0001 000E 
                 ; 0001 000F 
                 ; 0001 0010           for(i=0;i<=7;i++)
000610 93ba      	ST   -Y,R27
000611 93aa      	ST   -Y,R26
000612 931a      	ST   -Y,R17
                 ;	*MAT1 -> Y+7
                 ;	*MAT2 -> Y+5
                 ;	*MAT3 -> Y+3
                 ;	*MAT4 -> Y+1
                 ;	i -> R17
000613 e010      	LDI  R17,0
000614 e010      	LDI  R17,LOW(0)
                 _0x20004:
000615 3018      	CPI  R17,8
000616 f510      	BRSH _0x20005
                 ; 0001 0011             {
                 ; 0001 0012                 PORTC=MAT1[i];
000617 81af      	LDD  R26,Y+7
000618 85b8      	LDD  R27,Y+7+1
000619 940e 0730 	CALL SUBOPT_0x1B
                 ; 0001 0013                 PORTA=((Activator[i])|(0x0));
00061b 5aec      	SUBI R30,LOW(-_Activator*2)
00061c 4fff      	SBCI R31,HIGH(-_Activator*2)
00061d 940e 0738 	CALL SUBOPT_0x1C
                 ; 0001 0014                 PORTC=0;PORTA=255;
                 ; 0001 0015 
                 ; 0001 0016 
                 ; 0001 0017 
                 ; 0001 0018                 PORTC=MAT2[i];
00061f 81ad      	LDD  R26,Y+5
000620 81be      	LDD  R27,Y+5+1
000621 940e 0730 	CALL SUBOPT_0x1B
                 ; 0001 0019                 PORTA=((Activator[i+ 8])|(0));
                +
000623 5ae4     +SUBI R30 , LOW ( - 2 * _Activator - ( 8 ) )
000624 4fff     +SBCI R31 , HIGH ( - 2 * _Activator - ( 8 ) )
                 	__ADDW1FN _Activator,8
000625 940e 0738 	CALL SUBOPT_0x1C
                 ; 0001 001A                 PORTC=0;PORTA=255;
                 ; 0001 001B 
                 ; 0001 001C 
                 ; 0001 001D 
                 ; 0001 001E 
                 ; 0001 001F 
                 ; 0001 0020                 PORTC=MAT3[i];
000627 81ab      	LDD  R26,Y+3
000628 81bc      	LDD  R27,Y+3+1
000629 940e 0730 	CALL SUBOPT_0x1B
                 ; 0001 0021                 PORTA=((Activator[i+(0)])|(0x10));
                +
00062b 5aec     +SUBI R30 , LOW ( - 2 * _Activator - ( 0 ) )
00062c 4fff     +SBCI R31 , HIGH ( - 2 * _Activator - ( 0 ) )
                 	__ADDW1FN _Activator,0
00062d 940e 073f 	CALL SUBOPT_0x1D
                 ; 0001 0022                 PORTC=0;PORTA=255;
                 ; 0001 0023 
                 ; 0001 0024 
                 ; 0001 0025 
                 ; 0001 0026 
                 ; 0001 0027 
                 ; 0001 0028                 PORTC=MAT4[i];
00062f 81a9      	LDD  R26,Y+1
000630 81ba      	LDD  R27,Y+1+1
000631 940e 0730 	CALL SUBOPT_0x1B
                 ; 0001 0029                 PORTA=((Activator[i+(8)])|( 0x10));
                +
000633 5ae4     +SUBI R30 , LOW ( - 2 * _Activator - ( 8 ) )
000634 4fff     +SBCI R31 , HIGH ( - 2 * _Activator - ( 8 ) )
                 	__ADDW1FN _Activator,8
000635 940e 073f 	CALL SUBOPT_0x1D
                 ; 0001 002A                 PORTC=0;PORTA=255;
                 ; 0001 002B 
                 ; 0001 002C 
                 ; 0001 002D 
                 ; 0001 002E             }
000637 5f1f      	SUBI R17,-1
000638 cfdc      	RJMP _0x20004
                 _0x20005:
                 ; 0001 002F 
                 ; 0001 0030 
                 ; 0001 0031 }
000639 8118      	LDD  R17,Y+0
00063a 9629      	ADIW R28,9
00063b 9508      	RET
                 ; .FEND
                 ;
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 
                 	.CSEG
                 _memset:
                 ; .FSTART _memset
00063c 93ba      	ST   -Y,R27
00063d 93aa      	ST   -Y,R26
00063e 81b9          ldd  r27,y+1
00063f 81a8          ld   r26,y
000640 9610          adiw r26,0
000641 f031          breq memset1
000642 81fc          ldd  r31,y+4
000643 81eb          ldd  r30,y+3
000644 816a          ldd  r22,y+2
                 memset0:
000645 9361          st   z+,r22
000646 9711          sbiw r26,1
000647 f7e9          brne memset0
                 memset1:
000648 81eb          ldd  r30,y+3
000649 81fc          ldd  r31,y+4
00064a 9625      	ADIW R28,5
00064b 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 
                 	.DSEG
                 
                 	.CSEG
                 
                 	.CSEG
                 
                 	.CSEG
                 
                 	.DSEG
                 __empty:
000260           	.BYTE 0x8
                 _and:
000268           	.BYTE 0x8
                 __dollor:
000270           	.BYTE 0x8
                 __Ad:
000278           	.BYTE 0x8
                 _star:
000280           	.BYTE 0x8
                 __per:
000288           	.BYTE 0x8
                 __power:
000290           	.BYTE 0x8
                 __dot:
000298           	.BYTE 0x8
                 __comma:
0002a0           	.BYTE 0x8
                 __Square:
0002a8           	.BYTE 0x8
                 _A:
0002b0           	.BYTE 0x8
                 _B:
0002b8           	.BYTE 0x8
                 _C:
0002c0           	.BYTE 0x8
                 _D:
0002c8           	.BYTE 0x8
                 _E:
0002d0           	.BYTE 0x8
                 _F:
0002d8           	.BYTE 0x8
                 _G:
0002e0           	.BYTE 0x8
                 _H:
0002e8           	.BYTE 0x8
                 __I:
0002f0           	.BYTE 0x8
                 __J:
0002f8           	.BYTE 0x8
                 _K:
000300           	.BYTE 0x8
                 _L:
000308           	.BYTE 0x8
                 _M:
000310           	.BYTE 0x8
                 _N:
000318           	.BYTE 0x8
                 _O:
000320           	.BYTE 0x8
                 _P:
000328           	.BYTE 0x8
                 _Q:
000330           	.BYTE 0x8
                 _R:
000338           	.BYTE 0x8
                 _S:
000340           	.BYTE 0x8
                 _T:
000348           	.BYTE 0x8
                 _U:
000350           	.BYTE 0x8
                 _V:
000358           	.BYTE 0x8
                 _W:
000360           	.BYTE 0x8
                 _X:
000368           	.BYTE 0x8
                 _Y:
000370           	.BYTE 0x8
                 _Z:
000378           	.BYTE 0x8
                 __0:
000380           	.BYTE 0x8
                 __1:
000388           	.BYTE 0x8
                 __2:
000390           	.BYTE 0x8
                 __3:
000398           	.BYTE 0x8
                 __4:
0003a0           	.BYTE 0x8
                 __5:
0003a8           	.BYTE 0x8
                 __6:
0003b0           	.BYTE 0x8
                 __7:
0003b8           	.BYTE 0x8
                 __8:
0003c0           	.BYTE 0x8
                 __9:
0003c8           	.BYTE 0x8
                 _contin:
0003d0           	.BYTE 0x1
                 _mul:
0003d1           	.BYTE 0x1
                 _receive:
0003d2           	.BYTE 0x1
                 _finish:
0003d3           	.BYTE 0x1
                 _cnt:
0003d4           	.BYTE 0x1
                 _flag:
0003d5           	.BYTE 0x1
                 _dis:
0003d6           	.BYTE 0x4
                 _show:
0003da           	.BYTE 0x100
                 _show1:
0004da           	.BYTE 0x100
                 _done:
0005da           	.BYTE 0x1
                 _j:
0005db           	.BYTE 0x1
                 _sh_cnt:
0005dc           	.BYTE 0x1
                 _sh1_cnt:
0005dd           	.BYTE 0x1
                 _sh2_cnt:
0005de           	.BYTE 0x1
                 _rr:
0005df           	.BYTE 0x4
                 __seed_G102:
0005e3           	.BYTE 0x4
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 45 TIMES, CODE SIZE REDUCTION:217 WORDS
                 SUBOPT_0x0:
00064c 81e8      	LD   R30,Y
00064d 81a9      	LDD  R26,Y+1
00064e 81ba      	LDD  R27,Y+1+1
00064f e0f0      	LDI  R31,0
000650 0fae      	ADD  R26,R30
000651 1fbf      	ADC  R27,R31
000652 91ac      	LD   R26,X
000653 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1:
000654 ede6      	LDI  R30,LOW(_dis)
000655 e0f3      	LDI  R31,HIGH(_dis)
000656 93fa      	ST   -Y,R31
000657 93ea      	ST   -Y,R30
000658 e0e0      	LDI  R30,LOW(0)
000659 93ea      	ST   -Y,R30
00065a e0a4      	LDI  R26,LOW(4)
00065b e0b0      	LDI  R27,0
00065c 940c 063c 	JMP  _memset
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 21 TIMES, CODE SIZE REDUCTION:37 WORDS
                 SUBOPT_0x2:
00065e edea      	LDI  R30,LOW(_show)
00065f e0f3      	LDI  R31,HIGH(_show)
000660 93fa      	ST   -Y,R31
000661 93ea      	ST   -Y,R30
000662 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3:
000663 e0e0      	LDI  R30,LOW(0)
000664 93ea      	ST   -Y,R30
000665 e0a4      	LDI  R26,LOW(4)
000666 e0b0      	LDI  R27,0
000667 940c 063c 	JMP  _memset
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x4:
000669 91e0 05db 	LDS  R30,_j
00066b 5fef      	SUBI R30,-LOW(1)
00066c 93e0 05db 	STS  _j,R30
00066e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:8 WORDS
                 SUBOPT_0x5:
00066f ede0      	LDI  R30,LOW(_E)
000670 e0f2      	LDI  R31,HIGH(_E)
000671 013f      	MOVW R6,R30
000672 e6e0      	LDI  R30,LOW(__empty)
000673 e0f2      	LDI  R31,HIGH(__empty)
000674 014f      	MOVW R8,R30
000675 e6e0      	LDI  R30,LOW(__empty)
000676 e0f2      	LDI  R31,HIGH(__empty)
000677 015f      	MOVW R10,R30
000678 e6e0      	LDI  R30,LOW(__empty)
000679 e0f2      	LDI  R31,HIGH(__empty)
00067a 016f      	MOVW R12,R30
00067b e000      	LDI  R16,LOW(0)
00067c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 28 TIMES, CODE SIZE REDUCTION:186 WORDS
                 SUBOPT_0x6:
00067d 927a      	ST   -Y,R7
00067e 926a      	ST   -Y,R6
00067f 929a      	ST   -Y,R9
000680 928a      	ST   -Y,R8
000681 92ba      	ST   -Y,R11
000682 92aa      	ST   -Y,R10
000683 01d6      	MOVW R26,R12
000684 940c 0610 	JMP  _display
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:8 WORDS
                 SUBOPT_0x7:
000686 e1e0      	LDI  R30,LOW(_M)
000687 e0f3      	LDI  R31,HIGH(_M)
000688 013f      	MOVW R6,R30
000689 ede0      	LDI  R30,LOW(_E)
00068a e0f2      	LDI  R31,HIGH(_E)
00068b 014f      	MOVW R8,R30
00068c e6e0      	LDI  R30,LOW(__empty)
00068d e0f2      	LDI  R31,HIGH(__empty)
00068e 015f      	MOVW R10,R30
00068f e6e0      	LDI  R30,LOW(__empty)
000690 e0f2      	LDI  R31,HIGH(__empty)
000691 016f      	MOVW R12,R30
000692 e000      	LDI  R16,LOW(0)
000693 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:8 WORDS
                 SUBOPT_0x8:
000694 e2e0      	LDI  R30,LOW(_O)
000695 e0f3      	LDI  R31,HIGH(_O)
000696 013f      	MOVW R6,R30
000697 e1e0      	LDI  R30,LOW(_M)
000698 e0f3      	LDI  R31,HIGH(_M)
000699 014f      	MOVW R8,R30
00069a ede0      	LDI  R30,LOW(_E)
00069b e0f2      	LDI  R31,HIGH(_E)
00069c 015f      	MOVW R10,R30
00069d e6e0      	LDI  R30,LOW(__empty)
00069e e0f2      	LDI  R31,HIGH(__empty)
00069f 016f      	MOVW R12,R30
0006a0 e000      	LDI  R16,LOW(0)
0006a1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:8 WORDS
                 SUBOPT_0x9:
0006a2 ece0      	LDI  R30,LOW(_C)
0006a3 e0f2      	LDI  R31,HIGH(_C)
0006a4 013f      	MOVW R6,R30
0006a5 e2e0      	LDI  R30,LOW(_O)
0006a6 e0f3      	LDI  R31,HIGH(_O)
0006a7 014f      	MOVW R8,R30
0006a8 e1e0      	LDI  R30,LOW(_M)
0006a9 e0f3      	LDI  R31,HIGH(_M)
0006aa 015f      	MOVW R10,R30
0006ab ede0      	LDI  R30,LOW(_E)
0006ac e0f2      	LDI  R31,HIGH(_E)
0006ad 016f      	MOVW R12,R30
0006ae e000      	LDI  R16,LOW(0)
0006af 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0xA:
0006b0 013f      	MOVW R6,R30
0006b1 ece0      	LDI  R30,LOW(_C)
0006b2 e0f2      	LDI  R31,HIGH(_C)
0006b3 014f      	MOVW R8,R30
0006b4 e2e0      	LDI  R30,LOW(_O)
0006b5 e0f3      	LDI  R31,HIGH(_O)
0006b6 015f      	MOVW R10,R30
0006b7 e1e0      	LDI  R30,LOW(_M)
0006b8 e0f3      	LDI  R31,HIGH(_M)
0006b9 016f      	MOVW R12,R30
0006ba e000      	LDI  R16,LOW(0)
0006bb 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 12 TIMES, CODE SIZE REDUCTION:19 WORDS
                 SUBOPT_0xB:
0006bc 013f      	MOVW R6,R30
0006bd e6e0      	LDI  R30,LOW(__empty)
0006be e0f2      	LDI  R31,HIGH(__empty)
0006bf 014f      	MOVW R8,R30
0006c0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0xC:
0006c1 ece0      	LDI  R30,LOW(_C)
0006c2 e0f2      	LDI  R31,HIGH(_C)
0006c3 015f      	MOVW R10,R30
0006c4 e2e0      	LDI  R30,LOW(_O)
0006c5 e0f3      	LDI  R31,HIGH(_O)
0006c6 016f      	MOVW R12,R30
0006c7 e000      	LDI  R16,LOW(0)
0006c8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xD:
0006c9 ede0      	LDI  R30,LOW(_E)
0006ca e0f2      	LDI  R31,HIGH(_E)
0006cb 013f      	MOVW R6,R30
0006cc e0e8      	LDI  R30,LOW(_L)
0006cd e0f3      	LDI  R31,HIGH(_L)
0006ce 014f      	MOVW R8,R30
0006cf 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0xE:
0006d0 e6e0      	LDI  R30,LOW(_W)
0006d1 e0f3      	LDI  R31,HIGH(_W)
0006d2 013f      	MOVW R6,R30
0006d3 ede0      	LDI  R30,LOW(_E)
0006d4 e0f2      	LDI  R31,HIGH(_E)
0006d5 014f      	MOVW R8,R30
0006d6 e0e8      	LDI  R30,LOW(_L)
0006d7 e0f3      	LDI  R31,HIGH(_L)
0006d8 015f      	MOVW R10,R30
0006d9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xF:
0006da e6e0      	LDI  R30,LOW(__empty)
0006db e0f2      	LDI  R31,HIGH(__empty)
0006dc 016f      	MOVW R12,R30
0006dd e000      	LDI  R16,LOW(0)
0006de 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:8 WORDS
                 SUBOPT_0x10:
0006df e6e0      	LDI  R30,LOW(__empty)
0006e0 e0f2      	LDI  R31,HIGH(__empty)
0006e1 013f      	MOVW R6,R30
0006e2 e6e0      	LDI  R30,LOW(_W)
0006e3 e0f3      	LDI  R31,HIGH(_W)
0006e4 014f      	MOVW R8,R30
0006e5 ede0      	LDI  R30,LOW(_E)
0006e6 e0f2      	LDI  R31,HIGH(_E)
0006e7 015f      	MOVW R10,R30
0006e8 e0e8      	LDI  R30,LOW(_L)
0006e9 e0f3      	LDI  R31,HIGH(_L)
0006ea 016f      	MOVW R12,R30
0006eb e000      	LDI  R16,LOW(0)
0006ec 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 11 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x11:
0006ed e6e0      	LDI  R30,LOW(__empty)
0006ee e0f2      	LDI  R31,HIGH(__empty)
0006ef cfcc      	RJMP SUBOPT_0xB
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x12:
0006f0 e6e0      	LDI  R30,LOW(_W)
0006f1 e0f3      	LDI  R31,HIGH(_W)
0006f2 015f      	MOVW R10,R30
0006f3 ede0      	LDI  R30,LOW(_E)
0006f4 e0f2      	LDI  R31,HIGH(_E)
0006f5 016f      	MOVW R12,R30
0006f6 e000      	LDI  R16,LOW(0)
0006f7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x13:
0006f8 e6e0      	LDI  R30,LOW(__empty)
0006f9 e0f2      	LDI  R31,HIGH(__empty)
0006fa 015f      	MOVW R10,R30
0006fb e6e0      	LDI  R30,LOW(_W)
0006fc e0f3      	LDI  R31,HIGH(_W)
0006fd 016f      	MOVW R12,R30
0006fe e000      	LDI  R16,LOW(0)
0006ff 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x14:
000700 e6e0      	LDI  R30,LOW(__empty)
000701 e0f2      	LDI  R31,HIGH(__empty)
000702 015f      	MOVW R10,R30
000703 e6e0      	LDI  R30,LOW(__empty)
000704 e0f2      	LDI  R31,HIGH(__empty)
000705 016f      	MOVW R12,R30
000706 e010      	LDI  R17,LOW(0)
000707 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:22 WORDS
                 SUBOPT_0x15:
000708 940e 01ab 	CALL _Search_dis
00070a 0132      	MOVW R6,R4
00070b 2444      	CLR  R4
00070c 2455      	CLR  R5
00070d cf50      	RJMP SUBOPT_0x2
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x16:
00070e 940e 01ab 	CALL _Search_dis
000710 0142      	MOVW R8,R4
000711 2444      	CLR  R4
000712 2455      	CLR  R5
000713 cf4a      	RJMP SUBOPT_0x2
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x17:
000714 940e 01ab 	CALL _Search_dis
000716 0152      	MOVW R10,R4
000717 2444      	CLR  R4
000718 2455      	CLR  R5
000719 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x18:
00071a e6e0      	LDI  R30,LOW(__empty)
00071b e0f2      	LDI  R31,HIGH(__empty)
00071c 015f      	MOVW R10,R30
00071d e6e0      	LDI  R30,LOW(__empty)
00071e e0f2      	LDI  R31,HIGH(__empty)
00071f 016f      	MOVW R12,R30
000720 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x19:
000721 940e 01ab 	CALL _Search_dis
000723 0142      	MOVW R8,R4
000724 2444      	CLR  R4
000725 2455      	CLR  R5
000726 cff3      	RJMP SUBOPT_0x18
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1A:
000727 940e 01ab 	CALL _Search_dis
000729 0132      	MOVW R6,R4
00072a 2444      	CLR  R4
00072b 2455      	CLR  R5
00072c e6e0      	LDI  R30,LOW(__empty)
00072d e0f2      	LDI  R31,HIGH(__empty)
00072e 014f      	MOVW R8,R30
00072f cfea      	RJMP SUBOPT_0x18
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x1B:
000730 27ee      	CLR  R30
000731 0fa1      	ADD  R26,R17
000732 1fbe      	ADC  R27,R30
000733 91ec      	LD   R30,X
000734 bbe5      	OUT  0x15,R30
000735 2fe1      	MOV  R30,R17
000736 e0f0      	LDI  R31,0
000737 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1C:
000738 91e4      	LPM  R30,Z
000739 bbeb      	OUT  0x1B,R30
00073a e0e0      	LDI  R30,LOW(0)
00073b bbe5      	OUT  0x15,R30
00073c efef      	LDI  R30,LOW(255)
00073d bbeb      	OUT  0x1B,R30
00073e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x1D:
00073f 91e4      	LPM  R30,Z
000740 61e0      	ORI  R30,0x10
000741 bbeb      	OUT  0x1B,R30
000742 e0e0      	LDI  R30,LOW(0)
000743 bbe5      	OUT  0x15,R30
000744 efef      	LDI  R30,LOW(255)
000745 bbeb      	OUT  0x1B,R30
000746 9508      	RET
                 
                 
                 	.CSEG
                 __LSRW2:
000747 95f6      	LSR  R31
000748 95e7      	ROR  R30
000749 95f6      	LSR  R31
00074a 95e7      	ROR  R30
00074b 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega32 register use summary:
r0 :   6 r1 :   3 r2 :   0 r3 :   0 r4 :  15 r5 :   7 r6 :  13 r7 :   1 
r8 :  14 r9 :   1 r10:  18 r11:   1 r12:  18 r13:   0 r14:   0 r15:   2 
r16:  80 r17:  26 r18:   7 r19:   3 r20:  16 r21:  10 r22:   6 r23:   2 
r24:   9 r25:   4 r26: 137 r27:  26 r28:   4 r29:   1 r30: 350 r31: 151 
x  :   8 y  :  70 z  :  15 
Registers used: 31 out of 35 (88.6%)

ATmega32 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :   3 add   :   3 
adiw  :   4 and   :   0 andi  :   1 asr   :   0 bclr  :   0 bld   :   0 
brbc  :   0 brbs  :   0 brcc  :   0 brcs  :   0 break :   0 breq  :  12 
brge  :   0 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :   4 
brlt  :   0 brmi  :   0 brne  :  65 brpl  :   0 brsh  :  38 brtc  :   0 
brts  :   0 brvc  :   0 brvs  :   0 bset  :   0 bst   :   0 call  : 165 
cbi   :   0 cbr   :   0 clc   :   0 clh   :   0 cli   :   1 cln   :   0 
clr   :  19 cls   :   0 clt   :   0 clv   :   0 clz   :   0 com   :   0 
cp    :  12 cpc   :   9 cpi   : 101 cpse  :   0 dec   :   1 des   :   0 
eor   :   0 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   0 ijmp  :   0 
in    :   3 inc   :   0 jmp   :  25 ld    :  24 ldd   :  19 ldi   : 314 
lds   :  40 lpm   :  11 lsl   :  10 lsr   :   2 mov   :  13 movw  :  68 
mul   :   0 muls  :   0 mulsu :   0 neg   :   0 nop   :   0 or    :   0 
ori   :   1 out   :  22 pop   :   0 push  :   0 rcall :   6 ret   :  28 
reti  :   1 rjmp  : 106 rol   :   0 ror   :   2 sbc   :   1 sbci  :  11 
sbi   :   0 sbic  :   0 sbis  :   0 sbiw  :   4 sbr   :   0 sbrc  :   0 
sbrs  :   0 sec   :   0 seh   :   0 sei   :   1 sen   :   0 ser   :   0 
ses   :   0 set   :   0 sev   :   0 sez   :   0 sleep :   0 spm   :   0 
st    :  40 std   :   1 sts   :  25 sub   :   1 subi  :  58 swap  :   0 
tst   :   0 wdr   :   0 
Instructions used: 42 out of 116 (36.2%)

ATmega32 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x000e98   3056    680   3736   32768  11.4%
[.dseg] 0x000060 0x0005e7      0    903    903    2048  44.1%
[.eseg] 0x000000 0x000000      0      0      0    1024   0.0%

Assembly complete, 0 errors, 50 warnings
